<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sakila_snowflake' inline='true' name='federated.01ujp100wfirg71b0lezq1xwyav3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0p1dokg0rl6qjt114169h1gblk9c'>
            <connection class='mysql' dbname='sakila_snowflake' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500717' measure-ordering='alphabetic' measure-percentage='0.499283' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='sakila_snowflake (2)' inline='true' name='federated.147he7t0ff5zg00zjmo6f0rvzep8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.00yi5q31veuazt1dm28yl0srvsy2'>
            <connection class='mysql' dbname='sakila_snowflake' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500717' measure-ordering='alphabetic' measure-percentage='0.499283' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='dim_film (sakila_snowflake)' inline='true' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.1m0u8bh0ecysps1d6247f1acq9pq'>
            <connection class='mysql' dbname='sakila_snowflake' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fact_rental].[staff_key]' />
              <expression op='[dim_staff].[staff_key]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[fact_rental].[rental_date_key]' />
                <expression op='[dim_date].[date_Id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[fact_rental].[store_key]' />
                  <expression op='[dim_store].[store_key]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[dim_film_actor_bridge].[actor_key]' />
                    <expression op='[dim_actor].[actor_key]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[dim_film].[film_key]' />
                      <expression op='[dim_film_actor_bridge].[film_key]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[dim_location_address].[location_city_key]' />
                        <expression op='[dim_location_city].[location_city_key]' />
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[dim_customer].[location_address_key]' />
                          <expression op='[dim_location_address].[location_address_key]' />
                        </expression>
                      </clause>
                      <relation join='inner' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[fact_rental].[customer_key]' />
                            <expression op='[dim_customer].[customer_key]' />
                          </expression>
                        </clause>
                        <relation join='inner' type='join'>
                          <clause type='join'>
                            <expression op='='>
                              <expression op='[dim_film].[film_key]' />
                              <expression op='[fact_rental].[film_key]' />
                            </expression>
                          </clause>
                          <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_film' table='[dim_film]' type='table' />
                          <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='fact_rental' table='[fact_rental]' type='table' />
                        </relation>
                        <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_customer' table='[dim_customer]' type='table' />
                      </relation>
                      <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_location_address' table='[dim_location_address]' type='table' />
                    </relation>
                    <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_location_city' table='[dim_location_city]' type='table' />
                  </relation>
                  <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_film_actor_bridge' table='[dim_film_actor_bridge]' type='table' />
                </relation>
                <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_actor' table='[dim_actor]' type='table' />
              </relation>
              <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_store' table='[dim_store]' type='table' />
            </relation>
            <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_date' table='[dim_date]' type='table' />
          </relation>
          <relation connection='mysql.1m0u8bh0ecysps1d6247f1acq9pq' name='dim_staff' table='[dim_staff]' type='table' />
        </relation>
        <cols>
          <map key='[actor_first_name]' value='[dim_actor].[actor_first_name]' />
          <map key='[actor_id]' value='[dim_actor].[actor_id]' />
          <map key='[actor_key (dim_actor)]' value='[dim_actor].[actor_key]' />
          <map key='[actor_key]' value='[dim_film_actor_bridge].[actor_key]' />
          <map key='[actor_last_name]' value='[dim_actor].[actor_last_name]' />
          <map key='[actor_last_update]' value='[dim_actor].[actor_last_update]' />
          <map key='[actor_weighing_factor]' value='[dim_film_actor_bridge].[actor_weighing_factor]' />
          <map key='[count_rentals]' value='[fact_rental].[count_rentals]' />
          <map key='[count_returns]' value='[fact_rental].[count_returns]' />
          <map key='[customer_active]' value='[dim_customer].[customer_active]' />
          <map key='[customer_created]' value='[dim_customer].[customer_created]' />
          <map key='[customer_email]' value='[dim_customer].[customer_email]' />
          <map key='[customer_first_name]' value='[dim_customer].[customer_first_name]' />
          <map key='[customer_id]' value='[dim_customer].[customer_id]' />
          <map key='[customer_key (dim_customer)]' value='[dim_customer].[customer_key]' />
          <map key='[customer_key]' value='[fact_rental].[customer_key]' />
          <map key='[customer_last_name]' value='[dim_customer].[customer_last_name]' />
          <map key='[customer_last_update]' value='[dim_customer].[customer_last_update]' />
          <map key='[customer_valid_from]' value='[dim_customer].[customer_valid_from]' />
          <map key='[customer_valid_through]' value='[dim_customer].[customer_valid_through]' />
          <map key='[customer_version_number]' value='[dim_customer].[customer_version_number]' />
          <map key='[date]' value='[dim_date].[date]' />
          <map key='[date_Id]' value='[dim_date].[date_Id]' />
          <map key='[day_of_week]' value='[dim_date].[day_of_week]' />
          <map key='[dollar_amount]' value='[fact_rental].[dollar_amount]' />
          <map key='[film_description]' value='[dim_film].[film_description]' />
          <map key='[film_duration]' value='[dim_film].[film_duration]' />
          <map key='[film_has_behind_the_scenes]' value='[dim_film].[film_has_behind_the_scenes]' />
          <map key='[film_has_commentaries]' value='[dim_film].[film_has_commentaries]' />
          <map key='[film_has_deleted_scenes]' value='[dim_film].[film_has_deleted_scenes]' />
          <map key='[film_has_trailers]' value='[dim_film].[film_has_trailers]' />
          <map key='[film_id]' value='[dim_film].[film_id]' />
          <map key='[film_in_category_action]' value='[dim_film].[film_in_category_action]' />
          <map key='[film_in_category_animation]' value='[dim_film].[film_in_category_animation]' />
          <map key='[film_in_category_children]' value='[dim_film].[film_in_category_children]' />
          <map key='[film_in_category_classics]' value='[dim_film].[film_in_category_classics]' />
          <map key='[film_in_category_comedy]' value='[dim_film].[film_in_category_comedy]' />
          <map key='[film_in_category_documentary]' value='[dim_film].[film_in_category_documentary]' />
          <map key='[film_in_category_drama]' value='[dim_film].[film_in_category_drama]' />
          <map key='[film_in_category_family]' value='[dim_film].[film_in_category_family]' />
          <map key='[film_in_category_foreign]' value='[dim_film].[film_in_category_foreign]' />
          <map key='[film_in_category_games]' value='[dim_film].[film_in_category_games]' />
          <map key='[film_in_category_horror]' value='[dim_film].[film_in_category_horror]' />
          <map key='[film_in_category_music]' value='[dim_film].[film_in_category_music]' />
          <map key='[film_in_category_new]' value='[dim_film].[film_in_category_new]' />
          <map key='[film_in_category_scifi]' value='[dim_film].[film_in_category_scifi]' />
          <map key='[film_in_category_sports]' value='[dim_film].[film_in_category_sports]' />
          <map key='[film_in_category_travel]' value='[dim_film].[film_in_category_travel]' />
          <map key='[film_key (dim_film_actor_bridge)]' value='[dim_film_actor_bridge].[film_key]' />
          <map key='[film_key (fact_rental)]' value='[fact_rental].[film_key]' />
          <map key='[film_key]' value='[dim_film].[film_key]' />
          <map key='[film_language]' value='[dim_film].[film_language]' />
          <map key='[film_last_update]' value='[dim_film].[film_last_update]' />
          <map key='[film_rating_code]' value='[dim_film].[film_rating_code]' />
          <map key='[film_rating_text]' value='[dim_film].[film_rating_text]' />
          <map key='[film_release_year]' value='[dim_film].[film_release_year]' />
          <map key='[film_rental_duration]' value='[dim_film].[film_rental_duration]' />
          <map key='[film_rental_rate]' value='[dim_film].[film_rental_rate]' />
          <map key='[film_replacement_cost]' value='[dim_film].[film_replacement_cost]' />
          <map key='[film_title]' value='[dim_film].[film_title]' />
          <map key='[location_address]' value='[dim_location_address].[location_address]' />
          <map key='[location_address_id]' value='[dim_location_address].[location_address_id]' />
          <map key='[location_address_key (dim_location_address)]' value='[dim_location_address].[location_address_key]' />
          <map key='[location_address_key (dim_store)]' value='[dim_store].[location_address_key]' />
          <map key='[location_address_key]' value='[dim_customer].[location_address_key]' />
          <map key='[location_address_last_update]' value='[dim_location_address].[location_address_last_update]' />
          <map key='[location_address_postal_code]' value='[dim_location_address].[location_address_postal_code]' />
          <map key='[location_city_id]' value='[dim_location_city].[location_city_id]' />
          <map key='[location_city_key (dim_location_city)]' value='[dim_location_city].[location_city_key]' />
          <map key='[location_city_key]' value='[dim_location_address].[location_city_key]' />
          <map key='[location_city_last_update]' value='[dim_location_city].[location_city_last_update]' />
          <map key='[location_city_name]' value='[dim_location_city].[location_city_name]' />
          <map key='[location_country_key]' value='[dim_location_city].[location_country_key]' />
          <map key='[month]' value='[dim_date].[month]' />
          <map key='[month_day]' value='[dim_date].[month_day]' />
          <map key='[rental_date_key]' value='[fact_rental].[rental_date_key]' />
          <map key='[rental_duration]' value='[fact_rental].[rental_duration]' />
          <map key='[rental_id]' value='[fact_rental].[rental_id]' />
          <map key='[rental_last_update]' value='[fact_rental].[rental_last_update]' />
          <map key='[return_date_key]' value='[fact_rental].[return_date_key]' />
          <map key='[staff_active]' value='[dim_staff].[staff_active]' />
          <map key='[staff_first_name]' value='[dim_staff].[staff_first_name]' />
          <map key='[staff_id]' value='[dim_staff].[staff_id]' />
          <map key='[staff_key (dim_staff)]' value='[dim_staff].[staff_key]' />
          <map key='[staff_key]' value='[fact_rental].[staff_key]' />
          <map key='[staff_last_name]' value='[dim_staff].[staff_last_name]' />
          <map key='[staff_last_update]' value='[dim_staff].[staff_last_update]' />
          <map key='[staff_store_id]' value='[dim_staff].[staff_store_id]' />
          <map key='[staff_valid_from]' value='[dim_staff].[staff_valid_from]' />
          <map key='[staff_valid_through]' value='[dim_staff].[staff_valid_through]' />
          <map key='[staff_version_number]' value='[dim_staff].[staff_version_number]' />
          <map key='[store_id]' value='[dim_store].[store_id]' />
          <map key='[store_key (dim_store)]' value='[dim_store].[store_key]' />
          <map key='[store_key]' value='[fact_rental].[store_key]' />
          <map key='[store_last_update]' value='[dim_store].[store_last_update]' />
          <map key='[store_manager_first_name]' value='[dim_store].[store_manager_first_name]' />
          <map key='[store_manager_last_name]' value='[dim_store].[store_manager_last_name]' />
          <map key='[store_manager_staff_id]' value='[dim_store].[store_manager_staff_id]' />
          <map key='[store_valid_from]' value='[dim_store].[store_valid_from]' />
          <map key='[store_valid_through]' value='[dim_store].[store_valid_through]' />
          <map key='[store_version_number]' value='[dim_store].[store_version_number]' />
          <map key='[timestamp]' value='[dim_date].[timestamp]' />
          <map key='[week_starting_monday]' value='[dim_date].[week_starting_monday]' />
          <map key='[weekend]' value='[dim_date].[weekend]' />
          <map key='[year]' value='[dim_date].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>film_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[film_key]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_key</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[film_last_update]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_last_update</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[film_id]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_title]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>64</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_description]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_description</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>65535</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_LONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_release_year</remote-name>
            <remote-type>2</remote-type>
            <local-name>[film_release_year]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_release_year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_language</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_language]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_language</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_rental_duration</remote-name>
            <remote-type>16</remote-type>
            <local-name>[film_rental_duration]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_rental_duration</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_rental_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[film_rental_rate]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_rental_rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[film_duration]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_duration</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_replacement_cost</remote-name>
            <remote-type>131</remote-type>
            <local-name>[film_replacement_cost]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_replacement_cost</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_rating_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_rating_code]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_rating_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_rating_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_rating_text]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_rating_text</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_has_trailers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_has_trailers]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_has_trailers</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_has_commentaries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_has_commentaries]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_has_commentaries</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_has_deleted_scenes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_has_deleted_scenes]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_has_deleted_scenes</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_has_behind_the_scenes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_has_behind_the_scenes]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_has_behind_the_scenes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_action</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_action]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_action</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_animation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_animation]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_animation</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_children</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_children]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_children</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_classics</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_classics]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_classics</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_comedy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_comedy]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_comedy</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_documentary</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_documentary]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_documentary</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_drama</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_drama]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_drama</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_family</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_family]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_family</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_foreign</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_foreign]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_foreign</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_games]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_games</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_horror</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_horror]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_horror</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_music</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_music]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_music</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_new</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_new]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_new</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_scifi</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_scifi]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_scifi</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_sports</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_sports]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_sports</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_in_category_travel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[film_in_category_travel]</local-name>
            <parent-name>[dim_film]</parent-name>
            <remote-alias>film_in_category_travel</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rental_id]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>rental_id</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[rental_last_update]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>rental_last_update</remote-alias>
            <ordinal>36</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[customer_key]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>customer_key</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[staff_key]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>staff_key</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[film_key (fact_rental)]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>film_key</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[store_key]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>store_key</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_date_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rental_date_key]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>rental_date_key</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_date_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[return_date_key]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>return_date_key</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_returns</remote-name>
            <remote-type>3</remote-type>
            <local-name>[count_returns]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>count_returns</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_rentals</remote-name>
            <remote-type>3</remote-type>
            <local-name>[count_rentals]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>count_rentals</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rental_duration]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>rental_duration</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dollar_amount</remote-name>
            <remote-type>4</remote-type>
            <local-name>[dollar_amount]</local-name>
            <parent-name>[fact_rental]</parent-name>
            <remote-alias>dollar_amount</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>23</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[customer_key (dim_customer)]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_key</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_address_key]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>location_address_key</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[customer_last_update]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_last_update</remote-alias>
            <ordinal>50</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_first_name]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_first_name</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_last_name]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_last_name</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_email]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_email</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_active</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_active]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_active</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_created</remote-name>
            <remote-type>7</remote-type>
            <local-name>[customer_created]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_created</remote-alias>
            <ordinal>56</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_version_number</remote-name>
            <remote-type>2</remote-type>
            <local-name>[customer_version_number]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_version_number</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[customer_valid_from]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_valid_from</remote-alias>
            <ordinal>58</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_valid_through</remote-name>
            <remote-type>7</remote-type>
            <local-name>[customer_valid_through]</local-name>
            <parent-name>[dim_customer]</parent-name>
            <remote-alias>customer_valid_through</remote-alias>
            <ordinal>59</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_address_key (dim_location_address)]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_address_key</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_city_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_city_key]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_city_key</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_address_id]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_address_id</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[location_address_last_update]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_address_last_update</remote-alias>
            <ordinal>64</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_address]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_address</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>64</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_postal_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_address_postal_code]</local-name>
            <parent-name>[dim_location_address]</parent-name>
            <remote-alias>location_address_postal_code</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_city_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_city_key (dim_location_city)]</local-name>
            <parent-name>[dim_location_city]</parent-name>
            <remote-alias>location_city_key</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_country_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_country_key]</local-name>
            <parent-name>[dim_location_city]</parent-name>
            <remote-alias>location_country_key</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_city_name]</local-name>
            <parent-name>[dim_location_city]</parent-name>
            <remote-alias>location_city_name</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_city_id</remote-name>
            <remote-type>2</remote-type>
            <local-name>[location_city_id]</local-name>
            <parent-name>[dim_location_city]</parent-name>
            <remote-alias>location_city_id</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_city_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[location_city_last_update]</local-name>
            <parent-name>[dim_location_city]</parent-name>
            <remote-alias>location_city_last_update</remote-alias>
            <ordinal>72</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[film_key (dim_film_actor_bridge)]</local-name>
            <parent-name>[dim_film_actor_bridge]</parent-name>
            <remote-alias>film_key</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actor_key]</local-name>
            <parent-name>[dim_film_actor_bridge]</parent-name>
            <remote-alias>actor_key</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_weighing_factor</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actor_weighing_factor]</local-name>
            <parent-name>[dim_film_actor_bridge]</parent-name>
            <remote-alias>actor_weighing_factor</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actor_key (dim_actor)]</local-name>
            <parent-name>[dim_actor]</parent-name>
            <remote-alias>actor_key</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[actor_last_update]</local-name>
            <parent-name>[dim_actor]</parent-name>
            <remote-alias>actor_last_update</remote-alias>
            <ordinal>79</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actor_id]</local-name>
            <parent-name>[dim_actor]</parent-name>
            <remote-alias>actor_id</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actor_last_name]</local-name>
            <parent-name>[dim_actor]</parent-name>
            <remote-alias>actor_last_name</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actor_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actor_first_name]</local-name>
            <parent-name>[dim_actor]</parent-name>
            <remote-alias>actor_first_name</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[store_key (dim_store)]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_key</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_address_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_address_key (dim_store)]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>location_address_key</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_last_update</remote-name>
            <remote-type>134</remote-type>
            <local-name>[store_last_update]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_last_update</remote-alias>
            <ordinal>86</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>8</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[store_id]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>87</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_manager_staff_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[store_manager_staff_id]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_manager_staff_id</remote-alias>
            <ordinal>88</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_manager_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_manager_first_name]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_manager_first_name</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_manager_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_manager_last_name]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_manager_last_name</remote-alias>
            <ordinal>90</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_version_number</remote-name>
            <remote-type>2</remote-type>
            <local-name>[store_version_number]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_version_number</remote-alias>
            <ordinal>91</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[store_valid_from]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_valid_from</remote-alias>
            <ordinal>92</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_valid_through</remote-name>
            <remote-type>7</remote-type>
            <local-name>[store_valid_through]</local-name>
            <parent-name>[dim_store]</parent-name>
            <remote-alias>store_valid_through</remote-alias>
            <ordinal>93</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date_Id]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>date_Id</remote-alias>
            <ordinal>95</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>96</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <ordinal>97</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekend]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>weekend</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month_day]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>month_day</remote-alias>
            <ordinal>101</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>102</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_starting_monday</remote-name>
            <remote-type>129</remote-type>
            <local-name>[week_starting_monday]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>week_starting_monday</remote-alias>
            <ordinal>103</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[staff_key (dim_staff)]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_key</remote-alias>
            <ordinal>105</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[staff_last_update]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_last_update</remote-alias>
            <ordinal>106</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[staff_id]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_id</remote-alias>
            <ordinal>107</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[staff_first_name]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_first_name</remote-alias>
            <ordinal>108</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[staff_last_name]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_last_name</remote-alias>
            <ordinal>109</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_store_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[staff_store_id]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_store_id</remote-alias>
            <ordinal>110</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_version_number</remote-name>
            <remote-type>2</remote-type>
            <local-name>[staff_version_number]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_version_number</remote-alias>
            <ordinal>111</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[staff_valid_from]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_valid_from</remote-alias>
            <ordinal>112</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_valid_through</remote-name>
            <remote-type>7</remote-type>
            <local-name>[staff_valid_through]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_valid_through</remote-alias>
            <ordinal>113</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_active</remote-name>
            <remote-type>129</remote-type>
            <local-name>[staff_active]</local-name>
            <parent-name>[dim_staff]</parent-name>
            <remote-alias>staff_active</remote-alias>
            <ordinal>114</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rental Counts' datatype='integer' name='[Calculation_118078774715928576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([count_rentals])' />
      </column>
      <column caption='Staff Name' datatype='string' name='[Calculation_118078774716706817]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[staff_first_name] + &apos; &apos; + [staff_last_name]' />
      </column>
      <column caption='Count_cus based on range' datatype='integer' name='[Calculation_118078774824890375]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Calculation_118078774830616585]:COUNTD([customer_id])}' />
      </column>
      <column caption='Num of Rentals' datatype='integer' name='[Calculation_118078774826094600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [customer_id]: COUNT([rental_id])}' />
      </column>
      <column caption='rental_range' datatype='string' name='[Calculation_118078774830616585]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_118078774826094600] &lt; 200 then &apos;#&lt;200&apos;&#10;ELSEIF [Calculation_118078774826094600] &gt;= 200 AND [Calculation_118078774826094600] &lt; 400 then &apos;200-400&apos; &#10;ELSEIF [Calculation_118078774826094600] &gt;= 400 THEN &apos;#&gt;=400&apos; END' />
      </column>
      <column caption='real' datatype='integer' name='[Calculation_118078774834880522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_118078774830616585]: COUNT([Calculation_118078774826094600])}' />
      </column>
      <column caption='action' datatype='string' name='[Calculation_553309456118575104]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [film_in_category_action] = &apos;1&apos; then &apos;Action&apos; END' />
      </column>
      <column caption='Category' datatype='string' name='[Calculation_553309456120950785]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [film_in_category_action] = &apos;1&apos; then &apos;Action&apos;&#10;ELSEIF  [film_in_category_animation] = &apos;1&apos; then &apos;Animation&apos; &#10;ELSEIF  [film_in_category_children] = &apos;1&apos; THEN &apos;Children&apos;&#10;ELSEIF  [film_in_category_classics] = &apos;1&apos; THEN &apos;Classics&apos; &#10;ELSEIF  [film_in_category_comedy] = &apos;1&apos; THEN &apos;Comedy&apos;&#10;ELSEIF  [film_in_category_documentary] = &apos;1&apos; THEN &apos;Documentary&apos;&#10;ELSEIF  [film_in_category_drama] = &apos;1&apos; THEN &apos;Drama&apos;&#10;ELSEIF  [film_in_category_family] = &apos;1&apos; THEN &apos;Family&apos;&#10;ELSEIF  [film_in_category_foreign] = &apos;1&apos; THEN &apos;Foreign&apos;&#10;ELSEIF  [film_in_category_games] = &apos;1&apos; THEN &apos;Games&apos;&#10;ELSEIF  [film_in_category_horror] = &apos;1&apos; THEN &apos;Horror&apos;&#10;ELSEIF  [film_in_category_music] = &apos;1&apos; THEN &apos;Music&apos;&#10;ELSEIF  [film_in_category_new] = &apos;1&apos; THEN &apos;New&apos;&#10;ELSEIF  [film_in_category_scifi] = &apos;1&apos; THEN &apos;Scifi&apos;&#10;ELSEIF  [film_in_category_sports] = &apos;1&apos; THEN &apos;Sports&apos;&#10;ELSEIF  [film_in_category_travel] = &apos;1&apos; THEN &apos;Travel&apos;&#10;END' />
      </column>
      <column caption='Overdue' datatype='string' name='[Calculation_553309456130314242]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [return_date_key] - [rental_date_key] &gt; [rental_duration] THEN &apos;overdue&apos; END' />
      </column>
      <column caption='Payment' datatype='real' name='[Calculation_553309456167661571]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[dollar_amount]' />
      </column>
      <column caption='Count_rental' datatype='integer' name='[Calculation_553309456170967044]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='COUNT([rental_id])' />
      </column>
      <column caption='Count_customer' datatype='integer' name='[Calculation_553309456171126789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([customer_id])' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_553309456175685638]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK_DENSE(COUNT([rental_id]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actor First Name' datatype='string' name='[actor_first_name]' role='dimension' type='nominal' />
      <column caption='Actor Id' datatype='integer' name='[actor_id]' role='dimension' type='ordinal' />
      <column caption='Actor Key (Dim Actor)' datatype='integer' name='[actor_key (dim_actor)]' role='dimension' type='ordinal' />
      <column caption='Actor Key' datatype='integer' name='[actor_key]' role='dimension' type='ordinal' />
      <column caption='Actor Last Name' datatype='string' name='[actor_last_name]' role='dimension' type='nominal' />
      <column caption='Actor Last Update' datatype='datetime' name='[actor_last_update]' role='dimension' type='ordinal' />
      <column caption='Actor Weighing Factor' datatype='real' name='[actor_weighing_factor]' role='measure' type='quantitative' />
      <column caption='Count Rentals' datatype='integer' name='[count_rentals]' role='measure' type='quantitative' />
      <column caption='Count Returns' datatype='integer' name='[count_returns]' role='measure' type='quantitative' />
      <column caption='Customer Active' datatype='string' name='[customer_active]' role='dimension' type='nominal' />
      <column caption='Customer Created' datatype='date' name='[customer_created]' role='dimension' type='ordinal' />
      <column caption='Customer Email' datatype='string' name='[customer_email]' role='dimension' type='nominal' />
      <column caption='Customer First Name' datatype='string' name='[customer_first_name]' role='dimension' type='nominal' />
      <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column caption='Customer Key (Dim Customer)' datatype='integer' name='[customer_key (dim_customer)]' role='dimension' type='ordinal' />
      <column caption='Customer Key' datatype='integer' name='[customer_key]' role='dimension' type='ordinal' />
      <column caption='Customer Last Name' datatype='string' name='[customer_last_name]' role='dimension' type='nominal' />
      <column caption='Customer Last Update' datatype='datetime' name='[customer_last_update]' role='dimension' type='ordinal' />
      <column caption='Customer Valid From' datatype='date' name='[customer_valid_from]' role='dimension' type='ordinal' />
      <column caption='Customer Valid Through' datatype='date' name='[customer_valid_through]' role='dimension' type='ordinal' />
      <column caption='Customer Version Number' datatype='integer' name='[customer_version_number]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='date Id' datatype='integer' name='[date_Id]' role='dimension' type='ordinal' />
      <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
      <column caption='Dollar Amount' datatype='real' name='[dollar_amount]' role='measure' type='quantitative' />
      <column caption='Film Description' datatype='string' name='[film_description]' role='dimension' type='nominal' />
      <column caption='Film Duration' datatype='integer' name='[film_duration]' role='measure' type='quantitative' />
      <column caption='Film Has Behind The Scenes' datatype='string' name='[film_has_behind_the_scenes]' role='dimension' type='nominal' />
      <column caption='Film Has Commentaries' datatype='string' name='[film_has_commentaries]' role='dimension' type='nominal' />
      <column caption='Film Has Deleted Scenes' datatype='string' name='[film_has_deleted_scenes]' role='dimension' type='nominal' />
      <column caption='Film Has Trailers' datatype='string' name='[film_has_trailers]' role='dimension' type='nominal' />
      <column caption='Film Id' datatype='integer' name='[film_id]' role='dimension' type='ordinal' />
      <column caption='Film In Category Action' datatype='string' name='[film_in_category_action]' role='dimension' type='nominal' />
      <column caption='Film In Category Animation' datatype='string' name='[film_in_category_animation]' role='dimension' type='nominal' />
      <column caption='Film In Category Children' datatype='string' name='[film_in_category_children]' role='dimension' type='nominal' />
      <column caption='Film In Category Classics' datatype='string' name='[film_in_category_classics]' role='dimension' type='nominal' />
      <column caption='Film In Category Comedy' datatype='string' name='[film_in_category_comedy]' role='dimension' type='nominal' />
      <column caption='Film In Category Documentary' datatype='string' name='[film_in_category_documentary]' role='dimension' type='nominal' />
      <column caption='Film In Category Drama' datatype='string' name='[film_in_category_drama]' role='dimension' type='nominal' />
      <column caption='Film In Category Family' datatype='string' name='[film_in_category_family]' role='dimension' type='nominal' />
      <column caption='Film In Category Foreign' datatype='string' name='[film_in_category_foreign]' role='dimension' type='nominal' />
      <column caption='Film In Category Games' datatype='string' name='[film_in_category_games]' role='dimension' type='nominal' />
      <column caption='Film In Category Horror' datatype='string' name='[film_in_category_horror]' role='dimension' type='nominal' />
      <column caption='Film In Category Music' datatype='string' name='[film_in_category_music]' role='dimension' type='nominal' />
      <column caption='Film In Category New' datatype='string' name='[film_in_category_new]' role='dimension' type='nominal' />
      <column caption='Film In Category Scifi' datatype='string' name='[film_in_category_scifi]' role='dimension' type='nominal' />
      <column caption='Film In Category Sports' datatype='string' name='[film_in_category_sports]' role='dimension' type='nominal' />
      <column caption='Film In Category Travel' datatype='string' name='[film_in_category_travel]' role='dimension' type='nominal' />
      <column caption='Film Key (Dim Film Actor Bridge)' datatype='integer' name='[film_key (dim_film_actor_bridge)]' role='dimension' type='ordinal' />
      <column caption='Film Key (Fact Rental)' datatype='integer' name='[film_key (fact_rental)]' role='dimension' type='ordinal' />
      <column caption='Film Key' datatype='integer' name='[film_key]' role='dimension' type='ordinal' />
      <column caption='Film Language' datatype='string' name='[film_language]' role='dimension' type='nominal' />
      <column caption='Film Last Update' datatype='datetime' name='[film_last_update]' role='dimension' type='ordinal' />
      <column caption='Film Rating Code' datatype='string' name='[film_rating_code]' role='dimension' type='nominal' />
      <column caption='Film Rating Text' datatype='string' name='[film_rating_text]' role='dimension' type='nominal' />
      <column caption='Film Release Year' datatype='integer' name='[film_release_year]' role='dimension' type='quantitative' />
      <column caption='Film Rental Duration' datatype='integer' name='[film_rental_duration]' role='measure' type='quantitative' />
      <column caption='Film Rental Rate' datatype='real' name='[film_rental_rate]' role='measure' type='quantitative' />
      <column caption='Film Replacement Cost' datatype='real' name='[film_replacement_cost]' role='measure' type='quantitative' />
      <column caption='Film Title' datatype='string' name='[film_title]' role='dimension' type='nominal' />
      <column caption='Location Address' datatype='string' name='[location_address]' role='dimension' type='nominal' />
      <column caption='Location Address Id' datatype='integer' name='[location_address_id]' role='dimension' type='ordinal' />
      <column caption='Location Address Key (Dim Location Address)' datatype='integer' name='[location_address_key (dim_location_address)]' role='dimension' type='ordinal' />
      <column caption='Location Address Key (Dim Store)' datatype='integer' name='[location_address_key (dim_store)]' role='dimension' type='ordinal' />
      <column caption='Location Address Key' datatype='integer' name='[location_address_key]' role='dimension' type='ordinal' />
      <column caption='Location Address Last Update' datatype='datetime' name='[location_address_last_update]' role='dimension' type='ordinal' />
      <column caption='Location Address Postal Code' datatype='string' name='[location_address_postal_code]' role='dimension' type='nominal' />
      <column caption='Location City Id' datatype='integer' name='[location_city_id]' role='dimension' type='ordinal' />
      <column caption='Location City Key (Dim Location City)' datatype='integer' name='[location_city_key (dim_location_city)]' role='dimension' type='ordinal' />
      <column caption='Location City Key' datatype='integer' name='[location_city_key]' role='dimension' type='ordinal' />
      <column caption='Location City Last Update' datatype='datetime' name='[location_city_last_update]' role='dimension' type='ordinal' />
      <column caption='Location City Name' datatype='string' name='[location_city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Location Country Key' datatype='integer' name='[location_country_key]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Day' datatype='integer' name='[month_day]' role='dimension' type='quantitative' />
      <column caption='Rental Date Key' datatype='integer' name='[rental_date_key]' role='dimension' type='ordinal' />
      <column caption='Rental Duration' datatype='integer' name='[rental_duration]' role='measure' type='quantitative' />
      <column caption='Rental Id' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
      <column caption='Rental Last Update' datatype='datetime' name='[rental_last_update]' role='dimension' type='ordinal' />
      <column caption='Return Date Key' datatype='integer' name='[return_date_key]' role='dimension' type='ordinal' />
      <column caption='Staff Active' datatype='string' name='[staff_active]' role='dimension' type='nominal' />
      <column caption='Staff First Name' datatype='string' name='[staff_first_name]' role='dimension' type='nominal' />
      <column caption='Staff Id' datatype='integer' name='[staff_id]' role='dimension' type='ordinal' />
      <column caption='Staff Key (Dim Staff)' datatype='integer' name='[staff_key (dim_staff)]' role='dimension' type='ordinal' />
      <column caption='Staff Key' datatype='integer' name='[staff_key]' role='dimension' type='ordinal' />
      <column caption='Staff Last Name' datatype='string' name='[staff_last_name]' role='dimension' type='nominal' />
      <column caption='Staff Last Update' datatype='datetime' name='[staff_last_update]' role='dimension' type='ordinal' />
      <column caption='Staff Store Id' datatype='integer' name='[staff_store_id]' role='dimension' type='ordinal' />
      <column caption='Staff Valid From' datatype='date' name='[staff_valid_from]' role='dimension' type='ordinal' />
      <column caption='Staff Valid Through' datatype='date' name='[staff_valid_through]' role='dimension' type='ordinal' />
      <column caption='Staff Version Number' datatype='integer' name='[staff_version_number]' role='dimension' type='ordinal' />
      <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      <column caption='Store Key (Dim Store)' datatype='integer' name='[store_key (dim_store)]' role='dimension' type='ordinal' />
      <column caption='Store Key' datatype='integer' name='[store_key]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Store Last Update' datatype='datetime' name='[store_last_update]' role='dimension' type='ordinal' />
      <column caption='Store Manager First Name' datatype='string' name='[store_manager_first_name]' role='dimension' type='nominal' />
      <column caption='Store Manager Last Name' datatype='string' name='[store_manager_last_name]' role='dimension' type='nominal' />
      <column caption='Store Manager Staff Id' datatype='integer' name='[store_manager_staff_id]' role='dimension' type='ordinal' />
      <column caption='Store Valid From' datatype='date' name='[store_valid_from]' role='dimension' type='ordinal' />
      <column caption='Store Valid Through' datatype='date' name='[store_valid_through]' role='dimension' type='ordinal' />
      <column caption='Store Version Number' datatype='integer' name='[store_version_number]' role='dimension' type='ordinal' />
      <column caption='Timestamp' datatype='integer' name='[timestamp]' role='measure' type='quantitative' />
      <column caption='Week Starting Monday' datatype='string' name='[week_starting_monday]' role='dimension' type='nominal' />
      <column caption='Weekend' datatype='string' name='[weekend]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[location_city_name]' derivation='Max' name='[max:location_city_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[location_city_name]' derivation='None' name='[none:location_city_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_553309456170967044]' derivation='User' name='[rank:usr:Calculation_553309456170967044:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_553309456170967044]' derivation='User' name='[rank:usr:Calculation_553309456170967044:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_118078774824890375]' derivation='Sum' name='[sum:Calculation_118078774824890375:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_118078774834880522]' derivation='Sum' name='[sum:Calculation_118078774834880522:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553309456170967044]' derivation='User' name='[usr:Calculation_553309456170967044:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_553309456171126789]' derivation='User' name='[usr:Calculation_553309456171126789:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.291248' measure-ordering='alphabetic' measure-percentage='0.708752' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456171126789:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[sum:Calculation_118078774834880522:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[sum:Calculation_118078774824890375:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[rank:usr:Calculation_553309456170967044:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[rank:usr:Calculation_553309456170967044:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456170967044:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:location_city_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ahmadnagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Apeldoorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Balaiha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benin City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Braslia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Changzhou&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuauhtmoc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guaruj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hsichuh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Izumisano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Junan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kingstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ljubertsy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matsue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naala-Porto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nuuk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ozamis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Claro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Felipe del Progreso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shenzhen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soshanguve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syrakusa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Teboksary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Udine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vinh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zalantun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Corua (La Corua)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alvorada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta-Richmond County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baybay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Birgunj&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Coral&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Citt del Vaticano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deba Habe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Escobar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gijn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hanoi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jining&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanchrapara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ktahya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liaocheng&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mandaluyong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NDjamna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oshawa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pemalang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qomsheh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sasebo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanauan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toulon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valle de Santiago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yantai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angra dos Reis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baha Blanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boksburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cayenne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coatzacoalcos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dongying&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ezeiza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joliet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kurgan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mardan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niznekamsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oulu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pingxiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shahr-e Kord&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sogamoso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sungai Petani&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tsuyama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vicente Lpez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yingkou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;al-Hawiya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bandar Seri Begawan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brindisi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheju&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czestochowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Alto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Funafuti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haining&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huixquilucan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jalib al-Shuyukh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kakamigahara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klerksdorp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laohekou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lubumbashi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagareyama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palghat (Palakkad)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Probolinggo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanaa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shivapuri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southend-on-Sea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urawa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Witten&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Akishima&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Araatuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergamo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bratislava&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chapra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuautla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dzerzinsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florencia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;guas Lindas de Gois&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huaian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jurez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kirovo-Tepetsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meixian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nabereznyje Telny&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nyeri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paarl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pontianak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rizhao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Juan Bautista Tuxtepec&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shikarpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sousse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Szkesfehrvr&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ueda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitria de Santo Anto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zanzibar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Addis Abeba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anpolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baicheng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Celaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Compton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Donostia-San Sebastin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ezhou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hodeida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iwaki&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jos Azueta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kursk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maring&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mwene-Ditu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Novi Sad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ourense (Orense)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pjatigorsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rancagua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shanwei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tarlac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuguegarao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allende&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atinsk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bilbays&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ciparay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Daxian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Enshi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gatineau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iligan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kamyin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kowloon and New Kowloon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leshan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monclova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nantou&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qalyub&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santo Andr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sirjan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Torren&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yamuna Nagar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambattur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayugan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bislig&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caracas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ciudad del Este&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gingoog&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inegl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jinzhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuching&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liepaja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandi Bahauddin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mosul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quilmes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smolensk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sultanbeyli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tandil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valparai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yaound&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alessandria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asuncin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bat Yam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhusawal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bydgoszcz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cianjur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daugavpils&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emeishan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garden Grove&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Halisahar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ife&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jedda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kamarhati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Le Mans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mahajanga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mogiljov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nam Dinh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omdurman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pathankot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Purwakarta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saarbrcken&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago de Compostela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Simferopol&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Talavera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonghae&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uttarpara-Kotrung&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xintai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baiyin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botshabelo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coquimbo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dos Quebradas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faaa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hohhot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iwakuni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Juazeiro do Norte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lipetsk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Masqat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myingyan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Novoterkassk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Owo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaoguan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Songkhla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Surakarta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tarsus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tychy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vila Velha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuncheng&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;al-Manama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashdod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Banjul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brockton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiayi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dadu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Fuerte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fuyu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiphong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunuco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamalpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kolpino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lapu-Lapu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lungtan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miraj&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Najafabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pangkal Pinang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pudukkottai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ruse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Brbara dOeste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shubra al-Khayma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Southport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tafuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tiefa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruapan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wroclaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zeleznogorsk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;al-Qadarif&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhimavaram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bucuresti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Monte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fuzhou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haldia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ibirit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaroslavl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kalisz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Konotop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luzinia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mit Ghamr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Naju&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papeete&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rustenburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa F&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Siegen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taguig&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tieli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Xiangfan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhezqazghan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allappuzha (Alleppey)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athenai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cabuyao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ciomas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Davao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emmen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Halle/Saale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ikerre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jelets&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kamjanets-Podilskyi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korolev&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lengshuijiang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maikop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Molodetno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omiya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pyongyang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sagamihara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago de los Caballeros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sincelejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tongliao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vaduz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xinxiang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almirante Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlixco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Battambang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Binzhou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cam Ranh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erlangen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ilorin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jinchang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanazawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kragujevac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lhokseumawe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monywa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nanyang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onomichi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qinhuangdao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint-Denis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suihua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tambaram&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Touliu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valle de la Pascua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yangor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berhampore (Baharampur)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ede&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hubli-Dharwad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kisumu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laiwu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ocumare del Tuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pachuca de Soto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poos de Caldas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tel Aviv-Jaffa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uijongbu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zaoyang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adoni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aparecida de Goinia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beni-Mellal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Changhwa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crdoba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duisburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fengshan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iwatsuki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juiz de Fora&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kimchon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Livorno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matamoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nukualofa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Po&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Felipe de Puerto Plata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sharja&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sorocaba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syktyvkar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tartu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yuzhou&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amersfoort&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avellaneda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bchar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carmen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Goinia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Higashiosaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ipoh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kumbakonam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lilongwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mannheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mukateve&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nezahualcyotl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ostka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pereira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sawhaj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;So Bernardo do Campo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sumqayit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tangail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trshavn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yerevan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;al-Qatif&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ashqelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Basel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buenaventura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chungho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Datong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idfu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jastrzebie-Zdrj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamakura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koriyama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lausanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madiun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miyakonojo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nakhon Sawan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Purnea (Purnia)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;s-Hertogenbosch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Siliguri (Shiliguri)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taizz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usolje-Sibirskoje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xiangtan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhoushan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;al-Ayn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bamenda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chatsworth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Effon-Alaiye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fukuyama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hagonoy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huejutla de Reyes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kitwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Merlo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ogbomosho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pak Kret&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portoviejo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robamba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Miguel de Tucumn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shimonoseki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tabriz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weifang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zapopan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Acua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bag&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beira&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boa Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cavite&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coacalco de Berriozbal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhule (Dhulia)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gorontalo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isesaki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kurashiki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maracabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Munger (Monghyr)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nha Trang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otsu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serpuhov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;So Leopoldo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanshui&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tsaotun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Varanasi (Benares)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yinchuan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location_city_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ahmadnagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Apeldoorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Balaiha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benin City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Braslia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Changzhou&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuauhtmoc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guaruj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hsichuh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Izumisano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Junan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kingstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ljubertsy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matsue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naala-Porto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nuuk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ozamis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Claro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Felipe del Progreso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shenzhen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soshanguve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syrakusa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Teboksary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Udine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vinh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zalantun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Corua (La Corua)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alvorada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta-Richmond County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baybay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Birgunj&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Coral&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Citt del Vaticano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deba Habe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Escobar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gijn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hanoi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jining&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanchrapara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ktahya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liaocheng&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mandaluyong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NDjamna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oshawa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pemalang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qomsheh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sasebo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanauan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toulon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valle de Santiago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yantai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angra dos Reis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baha Blanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boksburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cayenne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coatzacoalcos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dongying&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ezeiza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joliet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kurgan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mardan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niznekamsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oulu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pingxiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shahr-e Kord&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sogamoso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sungai Petani&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tsuyama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vicente Lpez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yingkou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;al-Hawiya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bandar Seri Begawan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brindisi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheju&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czestochowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Alto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Funafuti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haining&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huixquilucan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jalib al-Shuyukh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kakamigahara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klerksdorp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laohekou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lubumbashi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagareyama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palghat (Palakkad)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Probolinggo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanaa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shivapuri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southend-on-Sea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urawa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Witten&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Akishima&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Araatuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergamo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bratislava&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chapra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuautla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dzerzinsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florencia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;guas Lindas de Gois&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huaian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jurez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kirovo-Tepetsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meixian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nabereznyje Telny&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nyeri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paarl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pontianak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rizhao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Juan Bautista Tuxtepec&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shikarpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sousse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Szkesfehrvr&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ueda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitria de Santo Anto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zanzibar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Addis Abeba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anpolis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baicheng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Celaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Compton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Donostia-San Sebastin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ezhou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hodeida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iwaki&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jos Azueta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kursk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maring&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mwene-Ditu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Novi Sad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ourense (Orense)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pjatigorsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rancagua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shanwei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tarlac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuguegarao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allende&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atinsk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bilbays&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ciparay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Daxian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Enshi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gatineau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iligan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kamyin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kowloon and New Kowloon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leshan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monclova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nantou&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qalyub&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santo Andr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sirjan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Torren&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yamuna Nagar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambattur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayugan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bislig&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caracas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ciudad del Este&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gingoog&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inegl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jinzhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuching&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liepaja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandi Bahauddin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mosul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quilmes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smolensk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sultanbeyli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tandil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valparai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yaound&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alessandria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asuncin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bat Yam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhusawal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bydgoszcz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cianjur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daugavpils&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emeishan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garden Grove&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Halisahar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ife&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jedda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kamarhati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Le Mans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mahajanga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mogiljov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nam Dinh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omdurman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pathankot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Purwakarta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saarbrcken&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago de Compostela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Simferopol&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Talavera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonghae&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uttarpara-Kotrung&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xintai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baiyin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botshabelo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coquimbo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dos Quebradas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faaa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hohhot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iwakuni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Juazeiro do Norte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lipetsk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Masqat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myingyan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Novoterkassk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Owo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaoguan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Songkhla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Surakarta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tarsus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tychy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vila Velha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuncheng&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;al-Manama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashdod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Banjul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brockton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiayi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dadu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Fuerte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fuyu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiphong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunuco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamalpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kolpino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lapu-Lapu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lungtan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miraj&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Najafabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pangkal Pinang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pudukkottai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ruse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Brbara dOeste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shubra al-Khayma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Southport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tafuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tiefa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruapan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wroclaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zeleznogorsk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;al-Qadarif&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhimavaram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bucuresti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Monte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fuzhou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haldia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ibirit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaroslavl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kalisz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Konotop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luzinia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mit Ghamr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Naju&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papeete&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rustenburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa F&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Siegen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taguig&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tieli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Xiangfan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhezqazghan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allappuzha (Alleppey)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athenai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cabuyao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ciomas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Davao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emmen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Halle/Saale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ikerre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jelets&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kamjanets-Podilskyi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korolev&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lengshuijiang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maikop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Molodetno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omiya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pyongyang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sagamihara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago de los Caballeros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sincelejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tongliao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vaduz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xinxiang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almirante Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlixco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Battambang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Binzhou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cam Ranh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erlangen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ilorin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jinchang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanazawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kragujevac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lhokseumawe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monywa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nanyang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onomichi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qinhuangdao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint-Denis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suihua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tambaram&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Touliu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valle de la Pascua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yangor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berhampore (Baharampur)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ede&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hubli-Dharwad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kisumu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laiwu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ocumare del Tuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pachuca de Soto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poos de Caldas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tel Aviv-Jaffa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uijongbu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zaoyang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adoni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aparecida de Goinia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beni-Mellal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Changhwa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crdoba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duisburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fengshan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iwatsuki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juiz de Fora&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kimchon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Livorno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matamoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nukualofa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Po&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Felipe de Puerto Plata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sharja&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sorocaba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syktyvkar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tartu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yuzhou&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amersfoort&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avellaneda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bchar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carmen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Goinia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Higashiosaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ipoh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kumbakonam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lilongwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mannheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mukateve&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nezahualcyotl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ostka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pereira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sawhaj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;So Bernardo do Campo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sumqayit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tangail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trshavn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yerevan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;al-Qatif&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ashqelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Basel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buenaventura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chungho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Datong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idfu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jastrzebie-Zdrj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamakura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koriyama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lausanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madiun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miyakonojo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nakhon Sawan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Purnea (Purnia)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;s-Hertogenbosch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Siliguri (Shiliguri)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taizz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usolje-Sibirskoje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xiangtan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhoushan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;al-Ayn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bamenda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chatsworth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Effon-Alaiye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fukuyama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hagonoy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huejutla de Reyes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kitwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Merlo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ogbomosho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pak Kret&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portoviejo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robamba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Miguel de Tucumn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shimonoseki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tabriz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weifang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zapopan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Acua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bag&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beira&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boa Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cavite&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coacalco de Berriozbal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhule (Dhulia)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gorontalo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isesaki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kurashiki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maracabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Munger (Monghyr)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nha Trang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otsu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serpuhov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;So Leopoldo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanshui&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tsaotun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Varanasi (Benares)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yinchuan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:store_id:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
      <datasources>
        <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
      </datasources>
      <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
        <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
        <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]'>
        <groupfilter function='level-members' level='[none:store_id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='a.Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Category' datatype='string' name='[Calculation_553309456120950785]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [film_in_category_action] = &apos;1&apos; then &apos;Action&apos;&#10;ELSEIF  [film_in_category_animation] = &apos;1&apos; then &apos;Animation&apos; &#10;ELSEIF  [film_in_category_children] = &apos;1&apos; THEN &apos;Children&apos;&#10;ELSEIF  [film_in_category_classics] = &apos;1&apos; THEN &apos;Classics&apos; &#10;ELSEIF  [film_in_category_comedy] = &apos;1&apos; THEN &apos;Comedy&apos;&#10;ELSEIF  [film_in_category_documentary] = &apos;1&apos; THEN &apos;Documentary&apos;&#10;ELSEIF  [film_in_category_drama] = &apos;1&apos; THEN &apos;Drama&apos;&#10;ELSEIF  [film_in_category_family] = &apos;1&apos; THEN &apos;Family&apos;&#10;ELSEIF  [film_in_category_foreign] = &apos;1&apos; THEN &apos;Foreign&apos;&#10;ELSEIF  [film_in_category_games] = &apos;1&apos; THEN &apos;Games&apos;&#10;ELSEIF  [film_in_category_horror] = &apos;1&apos; THEN &apos;Horror&apos;&#10;ELSEIF  [film_in_category_music] = &apos;1&apos; THEN &apos;Music&apos;&#10;ELSEIF  [film_in_category_new] = &apos;1&apos; THEN &apos;New&apos;&#10;ELSEIF  [film_in_category_scifi] = &apos;1&apos; THEN &apos;Scifi&apos;&#10;ELSEIF  [film_in_category_sports] = &apos;1&apos; THEN &apos;Sports&apos;&#10;ELSEIF  [film_in_category_travel] = &apos;1&apos; THEN &apos;Travel&apos;&#10;END' />
            </column>
            <column caption='Film In Category Action' datatype='string' name='[film_in_category_action]' role='dimension' type='nominal' />
            <column caption='Film In Category Animation' datatype='string' name='[film_in_category_animation]' role='dimension' type='nominal' />
            <column caption='Film In Category Children' datatype='string' name='[film_in_category_children]' role='dimension' type='nominal' />
            <column caption='Film In Category Classics' datatype='string' name='[film_in_category_classics]' role='dimension' type='nominal' />
            <column caption='Film In Category Comedy' datatype='string' name='[film_in_category_comedy]' role='dimension' type='nominal' />
            <column caption='Film In Category Documentary' datatype='string' name='[film_in_category_documentary]' role='dimension' type='nominal' />
            <column caption='Film In Category Drama' datatype='string' name='[film_in_category_drama]' role='dimension' type='nominal' />
            <column caption='Film In Category Family' datatype='string' name='[film_in_category_family]' role='dimension' type='nominal' />
            <column caption='Film In Category Foreign' datatype='string' name='[film_in_category_foreign]' role='dimension' type='nominal' />
            <column caption='Film In Category Games' datatype='string' name='[film_in_category_games]' role='dimension' type='nominal' />
            <column caption='Film In Category Horror' datatype='string' name='[film_in_category_horror]' role='dimension' type='nominal' />
            <column caption='Film In Category Music' datatype='string' name='[film_in_category_music]' role='dimension' type='nominal' />
            <column caption='Film In Category New' datatype='string' name='[film_in_category_new]' role='dimension' type='nominal' />
            <column caption='Film In Category Scifi' datatype='string' name='[film_in_category_scifi]' role='dimension' type='nominal' />
            <column caption='Film In Category Sports' datatype='string' name='[film_in_category_sports]' role='dimension' type='nominal' />
            <column caption='Film In Category Travel' datatype='string' name='[film_in_category_travel]' role='dimension' type='nominal' />
            <column caption='Film Title' datatype='string' name='[film_title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_553309456120950785]' derivation='None' name='[none:Calculation_553309456120950785:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_title]' derivation='None' name='[none:film_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456120950785:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_553309456120950785:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456120950785:nk]</column>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456120950785:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456120950785:nk] / [federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_title:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{B5E3763D-A0C8-4568-8899-2E0A13259059}' />
    </worksheet>
    <worksheet name='g.Highest??'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Rank' datatype='integer' name='[Calculation_553309456175685638]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK_DENSE(COUNT([rental_id]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Actor First Name' datatype='string' name='[actor_first_name]' role='dimension' type='nominal' />
            <column caption='Actor Last Name' datatype='string' name='[actor_last_name]' role='dimension' type='nominal' />
            <column caption='Film Id' datatype='integer' name='[film_id]' role='dimension' type='ordinal' />
            <column caption='Film Title' datatype='string' name='[film_title]' role='dimension' type='nominal' />
            <column-instance column='[actor_first_name]' derivation='None' name='[none:actor_first_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[actor_last_name]' derivation='None' name='[none:actor_last_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[film_id]' derivation='None' name='[none:film_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[film_title]' derivation='None' name='[none:film_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Rental Id' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_553309456175685638]' derivation='User' name='[usr:Calculation_553309456175685638:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_id:ok]' direction='ASC'>
            <dictionary>
              <bucket>103</bucket>
              <bucket>382</bucket>
              <bucket>331</bucket>
              <bucket>738</bucket>
              <bucket>767</bucket>
              <bucket>730</bucket>
              <bucket>489</bucket>
              <bucket>892</bucket>
              <bucket>880</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456175685638:ok]'>
            <groupfilter function='member' level='[usr:Calculation_553309456175685638:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456175685638:ok]</column>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_id:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_id:ok] / ([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:actor_first_name:nk] / ([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:actor_last_name:nk] / ([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_title:nk] / [federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456175685638:ok]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{6D130E52-BFFC-454C-A5F6-46E2C8A67170}' />
    </worksheet>
    <worksheet name='part b.Overdue'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Overdue' datatype='string' name='[Calculation_553309456130314242]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [return_date_key] - [rental_date_key] &gt; [rental_duration] THEN &apos;overdue&apos; END' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_553309456130314242]' derivation='None' name='[none:Calculation_553309456130314242:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_id]' derivation='None' name='[none:customer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rental_id]' derivation='None' name='[none:rental_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Rental Date Key' datatype='integer' name='[rental_date_key]' role='dimension' type='ordinal' />
            <column caption='Rental Duration' datatype='integer' name='[rental_duration]' role='measure' type='quantitative' />
            <column caption='Rental Id' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
            <column caption='Return Date Key' datatype='integer' name='[return_date_key]' role='dimension' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456130314242:nk]'>
            <groupfilter function='member' level='[none:Calculation_553309456130314242:nk]' member='&quot;overdue&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]'>
            <groupfilter function='level-members' level='[none:customer_id:ok]' />
          </filter>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456130314242:nk]</column>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]</column>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456130314242:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok] / [federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:rental_id:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{4A060B66-9292-43ED-8E0D-267857F14E11}' />
    </worksheet>
    <worksheet name='part d.Payments'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Payment' datatype='real' name='[Calculation_553309456167661571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[dollar_amount]' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column caption='Dollar Amount' datatype='real' name='[dollar_amount]' role='measure' type='quantitative' />
            <column caption='Location City Name' datatype='string' name='[location_city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[customer_id]' derivation='None' name='[none:customer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location_city_name]' derivation='None' name='[none:location_city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_553309456167661571]' derivation='Sum' name='[sum:Calculation_553309456167661571:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]' value='21' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]' />
              <text column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[sum:Calculation_553309456167661571:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2963535785675049' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk] / [federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok])</rows>
        <cols>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[sum:Calculation_553309456167661571:qk]</cols>
      </table>
      <simple-id uuid='{49CE24C7-6F58-4B93-B7A3-DCEB762D36EA}' />
    </worksheet>
    <worksheet name='part e'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Count_cus based on range' datatype='integer' name='[Calculation_118078774824890375]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Calculation_118078774830616585]:COUNTD([customer_id])}' />
            </column>
            <column caption='Num of Rentals' datatype='integer' name='[Calculation_118078774826094600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [customer_id]: COUNT([rental_id])}' />
            </column>
            <column caption='rental_range' datatype='string' name='[Calculation_118078774830616585]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_118078774826094600] &lt; 200 then &apos;#&lt;200&apos;&#10;ELSEIF [Calculation_118078774826094600] &gt;= 200 AND [Calculation_118078774826094600] &lt; 400 then &apos;200-400&apos; &#10;ELSEIF [Calculation_118078774826094600] &gt;= 400 THEN &apos;#&gt;=400&apos; END' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_118078774830616585]' derivation='None' name='[none:Calculation_118078774830616585:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Rental Id' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_118078774824890375]' derivation='Sum' name='[sum:Calculation_118078774824890375:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_118078774830616585:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]</column>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]' value='Select range'>
              <formatted-text>
                <run>Select range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[sum:Calculation_118078774824890375:qk]</rows>
        <cols>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]</cols>
      </table>
      <simple-id uuid='{4CA99E1C-55F9-4660-A526-5A7863B204AB}' />
    </worksheet>
    <worksheet name='part f'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column caption='Rental Counts' datatype='integer' name='[Calculation_118078774715928576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([count_rentals])' />
            </column>
            <column caption='Staff Name' datatype='string' name='[Calculation_118078774716706817]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[staff_first_name] + &apos; &apos; + [staff_last_name]' />
            </column>
            <column caption='Count Rentals' datatype='integer' name='[count_rentals]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_118078774716706817]' derivation='None' name='[none:Calculation_118078774716706817:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column caption='Staff First Name' datatype='string' name='[staff_first_name]' role='dimension' type='nominal' />
            <column caption='Staff Last Name' datatype='string' name='[staff_last_name]' role='dimension' type='nominal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_118078774715928576]' derivation='User' name='[usr:Calculation_118078774715928576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_118078774715928576:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_118078774715928576:qk]</rows>
        <cols>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</cols>
      </table>
      <simple-id uuid='{7AA71F85-3F73-49E6-B49C-DBEE7F2E30F5}' />
    </worksheet>
    <worksheet name='part h. rental&amp;store'>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
          </datasources>
          <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
            <column-instance column='[rental_id]' derivation='Count' name='[cnt:rental_id:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Rental Id' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
            <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' value='Select Store Id'>
              <formatted-text>
                <run>Select Store Id</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[cnt:rental_id:qk]</rows>
        <cols>([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:year:ok] / ([federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:month:nk] / [federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]))</cols>
      </table>
      <simple-id uuid='{D9BDD8A1-6E24-46CF-86B6-9E5FCE143C48}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Hwk 3'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='dim_film (sakila_snowflake)' name='federated.07q8rxo0it7qij1esdnbo1vf0dgf' />
      </datasources>
      <datasource-dependencies datasource='federated.07q8rxo0it7qij1esdnbo1vf0dgf'>
        <column caption='rental_range' datatype='string' name='[Calculation_118078774830616585]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_118078774826094600] &lt; 200 then &apos;#&lt;200&apos;&#10;ELSEIF [Calculation_118078774826094600] &gt;= 200 AND [Calculation_118078774826094600] &lt; 400 then &apos;200-400&apos; &#10;ELSEIF [Calculation_118078774826094600] &gt;= 400 THEN &apos;#&gt;=400&apos; END' />
        </column>
        <column-instance column='[Calculation_118078774830616585]' derivation='None' name='[none:Calculation_118078774830616585:nk]' pivot='key' type='nominal' />
        <column-instance column='[store_id]' derivation='None' name='[none:store_id:ok]' pivot='key' type='ordinal' />
        <column caption='Store Id' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='51250' id='4' name='part d.Payments' w='60100' x='39400' y='1125' />
        <zone h='43750' id='9' name='part d.Payments' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]' type='color' w='15000' x='26900' y='1875' />
        <zone h='53000' id='10' name='part h. rental&amp;store' w='36100' x='0' y='46125' />
        <zone h='7250' id='15' name='part h. rental&amp;store' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' type='color' w='5400' x='600' y='52750' />
        <zone h='49125' id='16' name='part e' w='31200' x='35400' y='49875' />
        <zone h='44375' id='19' name='part f' w='21100' x='66600' y='53000' />
        <zone h='7250' id='24' name='part f' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]' type='color' w='14000' x='89400' y='54250' />
        <zone h='43500' id='25' name='part b.Overdue' w='25100' x='500' y='2500' />
        <zone h='7625' id='30' mode='dropdown' name='part h. rental&amp;store' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' type='filter' values='database' w='13000' x='86000' y='375' />
        <zone h='12500' id='31' mode='dropdown' name='part e' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]' type='filter' values='database' w='8400' x='56200' y='50500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='33' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51250' id='4' is-fixed='true' name='part d.Payments' w='60100' x='39400' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43750' id='9' name='part d.Payments' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]' type='color' w='15000' x='26900' y='1875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43500' id='25' is-fixed='true' name='part b.Overdue' w='25100' x='500' y='2500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='30' mode='dropdown' name='part h. rental&amp;store' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' type='filter' values='database' w='13000' x='86000' y='375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53000' id='10' is-fixed='true' name='part h. rental&amp;store' w='36100' x='0' y='46125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='15' name='part h. rental&amp;store' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' type='color' w='5400' x='600' y='52750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12500' id='31' mode='dropdown' name='part e' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]' type='filter' values='database' w='8400' x='56200' y='50500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49125' id='16' is-fixed='true' name='part e' w='31200' x='35400' y='49875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44375' id='19' is-fixed='true' name='part f' w='21100' x='66600' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='24' name='part f' pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]' type='color' w='14000' x='89400' y='54250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08CD7D45-CEC1-4613-8F89-86A454D2A82F}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='a.Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456118575104:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456120950785:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_in_category_action:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69E7DA7D-9638-4138-888E-451BD77C3AF1}' />
    </window>
    <window class='worksheet' name='part b.Overdue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_553309456130314242:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:rental_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{514EDC37-034D-4FDC-9D6F-D0857812F3C2}' />
    </window>
    <window class='worksheet' name='part d.Payments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29BAB752-0D7C-47E8-A28E-498EC2976E8E}' />
    </window>
    <window class='worksheet' name='part e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[:Measure Names]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774810820610:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774824890375:qk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774826094600:qk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774830616585:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:customer_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_118078774810820610:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456170967044:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B101721-945C-4C3D-989A-30FC28592C14}' />
    </window>
    <window class='worksheet' name='g.Highest??'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:actor_first_name:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:actor_last_name:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:film_title:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456170967044:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456175685638:ok:1]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456175685638:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A5CE259-2107-422B-AA15-F244AE531C7F}' />
    </window>
    <window class='worksheet' name='part h. rental&amp;store'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:month:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:rental_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:year:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:year:qk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[usr:Calculation_553309456170967044:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC75D0CB-F16D-4BDF-9B7C-632EBD86D161}' />
    </window>
    <window class='worksheet' name='part f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:staff_id:ok]</field>
            <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C23FE147-7750-49FF-835E-89724766EA61}' />
    </window>
    <window class='dashboard' maximized='true' name='Hwk 3'>
      <viewpoints>
        <viewpoint name='part b.Overdue' />
        <viewpoint name='part d.Payments'>
          <highlight>
            <color-one-way>
              <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:location_city_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='part e' />
        <viewpoint name='part f'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:Calculation_118078774716706817:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='part h. rental&amp;store'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07q8rxo0it7qij1esdnbo1vf0dgf].[none:store_id:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{455C2A89-A420-4BB6-A2E9-50BA8AFEDCFE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Hwk 3' width='384'>
      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
      6XRjrtip0+lQKBQOHwHArVUCQ/+orKura0RpaLPZLPrnXo+Bzz7WxXfp6emsXbtW/P3MmTMA
      E0aqe6wpLi6msbERi8XC3XffzcGDB3Fzc8PX19dhhV/aTz5C7YAOwO78rQOoqKhg//796PV6
      tm3bRmxsLM7Ozhw4cIArV64wc+ZMEhISePPNNyfOCMBms41rT2CLxTLm8Y3F0+jNpnreSiUw
      9I/KrucLoFQqv/V8Y9XZ1tTUUFVVhbOzMytWrBi2vbe3V3wwOX/+PEuXLqW4uBg/Pz8KCgqw
      WCysXLnS4QVtjqKxsZHU1FTOnz9PQ0MDSqWSpKQkTp8+7ejQJi2zZ89mx44dnDlzhurqatHR
      8fLly3z/+98nJCSE3bt386//+q8TpwOQkHAEfn5+NDU1UVJSInYAly9fpre3V5Qct9lstLe3
      YzKZaGtro76+Hnd3d2JiYnB3d6eurm7KdgDBwcEcO3YMjUaDt7c3er2ezMzMMUnJnsq8//77
      ZGZm8vzzzwP9dSo5OTnMmjWL7OxsgoOD8fDwmLhSEBaLherqaqA/VbKwsJDCwkK0Wi0dHR1k
      Z2fT3t4O9D+FZGVljfuy/IG6Bonxw8mTJ1m6dCkhISHie9HR0SxevJji4mJCQ0OJiIigqKiI
      +Ph4vv76a/HmJpPJpnxRWFxcHKmpqfj4+KBUKgkNDWXTpk00NTU5OrRJS3t7O4888ghvvvkm
      n332mWiWNW/ePL7zne/g4+NDcHAwZWVlE3cEcPr0afr6+oiMjCQoKEjUmZ85cya1tbXExcVx
      8uRJkpOTKSsrIzk5WfThtTf5+fnU1taSmppKfX090dHRXLlyBZVKRX5+PnfddZdYCdzY2Eh0
      dDSnT5/m6tWrLFq0SExRMxqN6PV6Ll68SGpqqkNS14qfe/u62+b951NjGIljiImJ4dSpU6Ih
      T1RUlLjQPW3aNLE+Q6VSoVQqUalULFiwAK1Wi0wmQ6lUTumn3bq6Oq5cuUJUVBTTpk2jpaWF
      tLQ04uPjHR3apKWrq4s9e/bg5OTE448/zs6dO3nttdf47ne/y+uvv86KFStYsWJFv+nXRFkE
      HskQJjMzk5SUFKA/DfTUqVNilkl5eTltbW24ubnR2tqKQqFg6dKldhuKD8hBazQaTpw4wcaN
      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
    </thumbnail>
    <thumbnail height='384' name='a.Category' width='384'>
      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
      PZUngKysLH7xi1+otkmSxN///d+rT6bTsX37dp599lk8Hg9RUVF+LcgdO3awY8cO5ffVq1ez
      evXqp1FM4TF4vV7q6+vJz88nODhY9ZnRaCQvL4+6ujpyc3PR6/Wqv6MkSSxdupTbt2+j1WpV
      LdSgoCDV72FhYZSUlPCb3/yGnJwcZbtvyuPkYxoMBg4cOKCa7aLX69mzZ4/qu7799Xq96lw6
      nY7Lly9TWlqKVqslNjaW5557jsLCQuWYvvMcPHjQ7zy7d+8mNzcXjUaDwWBQHdtgMFBSUsLR
      o0enfBHrYVM/HyzndPfqQRqNZsr3DwThUYmEMIIgBAyREOZPREIYQRCEACYCgCAIQoASAUAQ
      BCFAiQAgCIIQoMQUggAmy7J4CU8IKL5/82KdsgkiAAQwj8cjVmEVAorD4cDlcvklFgpUogtI
      EAQhQIkAIAiCEKBEABAEQQhQIgAIgiAEKBEABEEQApSYBSQ8ksnTRScvUDZT/t/p9ntwkbPp
      jj/TZ9Pt9+D+M013lSTpod9/1PM8yr4P7v8o1/7nuCcz7fMoU4TFUtR/3UQAEB5JeXk5N27c
      YO3atcydO1f1WWlpKe3t7cDECpWRkZHk5OSQlpamrIA5OjrKmTNniIuLY9WqVX4rjPb393Pl
      yhWCg4PZvHmz6jO3282pU6cYGhriO9/5DgaDwa98DoeD8vJy2tvbGRwcJCoqiuzsbAoKCggL
      C8NqtXLp0iVGR0dV39Nqtaxdu5b4+Hja2tooKysDJlbvjI+PJzU1lfT0dNV3Ojs7uX79urJf
      XFwcycnJZGZm+lWIFouFy5cv09LSgtvtJjU1lTVr1hAfH6/s29/fz/nz55k9ezYLFixQ5SW4
      fv06JpOJzMxMv2u+efMmsbGxfiuh+oyNjXH9+nWam5txOBykp6ezfPlykpKSlH18Wd8qKyvp
      7+8nLCyM9PR0Jdvb5cuXp50yuWDBAubMmTPlZ8JfB9EFJMzI6XRSXl6O0+nkzp07uN1u5TNZ
      lmlpacFms5GWlobJZMJsNnP8+HGlkgSwWq1UVVVx7do1BgYGVMeXZZnq6mpqa2upqKjwO393
      dzdtbW2YzWaampr8PrdYLBw+fJiysjJMJhPPPvssSUlJ3LlzR8lZ4HA4qKqqIi4ujrS0NNWP
      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
      +C0Y5lv3Rq/Xo9VqlRkaD9LpdBgMBmVNGR+tVoter1etlzM5t+6DS0y7XC68Xq9f4hPfdep0
      uimXF/ad12azodPpCA0NVa1A6fu+Vqv1W5nS5XIp1zD5Xj5Io9EQHByM0+mcsuyTeTweLBYL
      Op1OtcTCg/dz8v6+ZPSTt3u9Xlwul9/9EAKHCADCtDweD6dPn6anpwf40zo1WVlZLFmyRMkO
      dfnyZSUxy2QLFy6kqKiIDz74gDVr1pCenq763GKx8Omnn7J69WoSExO5evUq9fX1fseZP38+
      q1evxuPxsH//ftXKmzExMRQVFZGUlKRsv3nzJsHBwSxdulR1nLa2Nu7cucPWrVtVFafFYuHk
      yZNs2LDBL/2i1+ulsrKS69evMzw8rKxqun79esLDw5EkCbfbzfnz58nJyfHL9HX79m0AioqK
      +OKLL5Q0jL41GH1ljo6OZteuXVy/fp2wsDAWL1487d+lq6uLU6dOkZCQoKRT9Dl58iQrVqwg
      IyND2Xb37l3OnDnDhg0bVCtndnZ2UlFRwbe+9S2/FJVCYBABQJiWLMt0dnayZMkSUlNTlSTt
      N2/epK2tjb179wLQ29tLcnIyCxcuVH0/PDwcjUaDXq/n9u3bqgAgyzKtra3cv3+fyMhI5Tgm
      k4klS5aojuNbh9+XaGXXrl1ERUUpCUf+8Ic/sG/fPuX4fX19yncmS09P5+TJk5SXl7Nq1Srl
      mDdu3GB8fJy4uDi/6y8rK+PTTz9ly5Yt5OXlMTY2xunTp9m/fz/f//73CQkJQZZluru7SUhI
      8Dtnf3+/8oSybNky5s2bB8CNGzewWq0UFxcrT1a+ezDTHPXq6mqCg4Npbm5mfHxcydrlS7pS
      W1urBABZlqmurqa/v5/KykpVAKitrcXtdov19AOY+MsLM4qPj1fWZM/MzCQhIYG33noLj8ej
      dClER0er1m2fLD8/n88//1zphvBpbGwkPT1dlWc2Kipq2uMAyvr8vso6Ozsbt9tNZWWlX3KR
      BxkMBtatW8fVq1eZM2cOMTEx9PX1UVVVxebNm/26f0ZHR7l27Rpbtmxh4cKFaDQaQkND2bFj
      BwcOHKCyspKioqIZ7t6fzJo1S/nv5uZmtFot6enpj9X94vV6qaurY/PmzZSWllJbW6taVz8r
      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
      wgAIBALBGkWEBqxh7k7NLBD8vuPz+RS9CYGYAQgEgjWECHpUIwyAQCAQrFGEARAIBII1ijAA
      AoFAsEYRBkAgEAjWKMIACAQCwRpFhIEKliUcDtPS0qIkQpMkidjYWJKTk0lISECr1SLLMj09
      PZjNZtatWxdVx8LCAoODg+Tn5xMTE4Msy9y8eROv18vGjRtVAiWzs7MMDg4qaYuHh4cZGBgA
      FpOrJSQkEB8frwjERBgdHaW3t5f8/HxVjpdAIEB7ezs5OTlYLBYCgQBXr16NamNMTAwlJSWY
      zWaCwSAjIyN0dnbi8XhwOBzk5uaSlJSkCMkvLCzQ3d3N8PAwWq2WdevWkZWVFZW8LUIkid3g
      4CC3b9/GYDCQnp5OZmYmFouFcDhMZ2cnycnJqiR5sKhYFhMTQ1paGgC9vb1MTExQUlKiksiM
      aBuXl5erBO8FgpUQMwDBsoRCIc6cOcOtW7cYGhqit7eXc+fO8dZbb9HQ0KBIDNbX19PR0bFk
      HRMTE5w9e1YRggmHw3z55ZccOXKEzs5OVVje2NgYp0+fVr63tbVx9uxZ+vv7uX79OocPH+bt
      t9+mu7tbdV1XVxcffPABX3zxBYFAQDnu8/n46quvlGydfr+f48eP09PTw9DQkPIZGRkhEAgg
      yzI3btzg3XffZXZ2Fq1WS2dnJ//3//5fBgcHlTqPHj3K2bNn0Wg0uN1uvvjiC379618v+fyy
      LNPa2srbb79NfX09kiQxOzvLiRMn+PLLL4HF/Ri1tbWMjIxEXd/Q0EBra6tS19WrVzl27BiX
      L19WvQO/389vf/tbvF7vCr+oQKBGzAAE9+Thhx+moKBA+d7c3MyJEyeorq5+IIFxo9HIpk2b
      OHXqFBkZGSuKuRQUFHDo0CE0Gg3hcJgzZ85w7NgxfvzjH5OZmamUKy0tZXBwkM7OTkpKSpat
      z2Kx8NRTT2G326POuVwuLl68yNNPP015ebmitTs5Oamkcr516xY+n48//MM/xGKxAIsd+NDQ
      0JL3m5qa4oMPPuCpp56iqqpKeV9+v5+JiYl7v6wlqKyspKmpibKyMlJTUx+oDoEAxAxA8AA4
      HA5lxPyglJWVIUnSkjKPy6HRaNi7dy95eXnU1taqzsXGxrJlyxYuXLjwwLubI7OHO/UBJEki
      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
      iImJ4dFHH0Wv1/OLX/yCV155heLiYubm5hgcHOTQoUPk5+errmlra6O3t3dJAxAMBunp6eHY
      sWPU1NSQmJh4P69iWRYWFjh79iwdHR381V/9lTJryM7O5uLFi+Tn52MymZBlmd7eXkZHR0lL
      S/tW7i0QfFOEARAsiyRJ7Ny5k/Hxcd555x2ysrLQ6/UMDQ2xc+dOtm3btip3w/DwMD6fj5yc
      nKjylZWVXLx4UdmoJEmSUkar1bJnzx48Hg8ffvghhw4dwufzodfrSU9PX7KuxsZGtm3bBsD8
      /DxHjhxBq9WysLCA1+tlz549Ue3u7+/nrbfeUtWVmprKI488ErXJChZnILOzs/h8PhYWFjAa
      jfzsZz9Tdj1LksTu3bt59913efPNNyksLGRmZoaOjg5qamqUXbp3PutKrFSmp6eHd999V+Wu
      SkhI4ODBg8q1LS0tvP3228r59evX89BDD4lZgwBJfpCAbsGawufz0dPTo2xuSklJobCwkNjY
      WIaGhgiHw1GLjlNTU4yNjVFSUsLExATj4+OUlpZG1T0/P097ezubNm3C6/XS1dVFYWGhquMN
      BAK0trZiMBiwWq0sLCxQWFgYVdfMzAwDAwNUVFTgcrloa2vD7/ej0WiwWq0kJCQom7AiTE5O
      0tHREVWX3W6nqKhI1UnKsszg4CBDQ0PA4iwlPj6e1NTUqJQXABMTE9y8eZPbt29jNpvJy8uj
      uLhYqTMcDnP9+nVKS0uXjBxyu9309PRQWFi4ZJz/cm2PjY2loqICWAy9HRgYUJ2Pj4+noKBg
      1Qvcv0+4XC7cbrfKFblWkSRJEgZAIBCsGYQB+E8kSZLERjCBQCBYowgDIBAIBGsUYQAEAoFg
      jSIMgEAgEKxRRBzYGiYUConkZYI1RSAQIBgM3jMJ4VpBGIA1TCQ1gUCwVgiFQoTDYfF3//8R
      LiCBQCBYowgDIBAIBGsUYQAEAoFgjSIMgEAgEKxRhAEQCASCNYqIAhKsCo/Hw+DgIIFAQCXa
      Pjc3hyzL2O12VXmv18vCwkJU2mWv10tfXx8Wi0WVKx8WQ/Smp6cVARqDwYDdbken06kyYvr9
      fmZnZ6PyuYTDYSYmJujv78dkMpGZmYnD4QAW00FPTU0tK25jNptxOBxIkoTf76e/vx+Px4PD
      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
    </thumbnail>
    <thumbnail height='288' name='g.Highest??' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAEgCAYAAAC926RRAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deVRUV4I/8G8Vq+xLgew7uICCIOKSzSyKCkbjaCatiUpMx3TSJmMySScx
      p53Jmc7MiZloT8fYiWkTNYm2acV9wbhGkkCxFQiCCyiILAGK3aKoqt8f/Kqaohb2IL7v5xxP
      wrv33Xer6lV969133yuRRqPRgIiIBEc80h0gIqKRwQAgIhIoBgARkUAxAIiIBIoBQEQkUAwA
      IiKBYgAQEQkUA4CISKAYAEREAsUAICISKAYAEZFAMQCIiASKAUBEJFAMACIigWIAEBEJFAOA
      iEigGABERALFACAiEigGABGRQDEAiIgEigFARCRQDAAiIoFiABARCRQDgIhIoBgAREQCxQAg
      IhIoBgARkUAxAIiIBIoBQEQkUAwAIiKBYgAQEQkUA4CISKAYAEREAsUAICISKAYAEZFAMQCI
      iASKAUBEJFAMACIigWIAEBEJFAOAiEigGABERALFACAiEigGABGRQDEAiIgEigFARCRQDAAi
      IoFiABARCRQDgIhIoBgAREQCxQAgIhIoBgARkUAxAIiIBIoBQEQkUAwAIiKBYgAQEQmU5WAb
      kEqlQ9EPIiL6lYk0Go1mpDtBRES/Pg4BEREJFAOAiEigGABERALFACAiEigGABGRQDEAiIgE
      igFARCRQDAAiIoEa9JXAQ0WtVuPUqVMoKyvD0qVL4e7ubrZ+dXU1fvrpJ+Tm5kIul2PSpEmI
      iYlBbGysyXVUKhWkUilu3LiBO3fuQC6XQyKRwNvbGw899BDGjh071A+LiOieNeJXAms0Gpw9
      exbbtm3DjRs3AACffvop4uPjTa6TnZ2N119/Hc3NzQZlTz/9NF5//XWIxfoHN5988gkOHjyI
      +vp6o21aWFhgwYIFePvtt2FlZTWIR0RENDqM6BFAeno6tm7diitXrvR5nezsbLzyyivo6OgA
      ADg6OsLV1RW3bt0CAOzduxd3797Fe++9p7fe0aNH9T78nZyc4ODggMrKSgBdRweHDh1CZ2cn
      /vM//3OwD43ucZWVlaiurjZYbm1tDXt7e4wdOxZjxowxum5bWxuKi4sxduxY+Pj4mN3OjRs3
      0NjYiJiYGIhEIt1ytVqNvLw8g/pWVlZwc3ODRCKBtbW1QblGo0Fubm5vD0+Pvb09IiIi+rUO
      DY87d+6gqqqqX+uEhobCycnJ5D5jTEBAgN4oSvf93cnJCaGhoQBGMAD++Mc/4ujRo/1eb/v2
      7boP/1WrVuGll16ChYUFCgsL8dJLL6G1tRWHDh3CqlWr4O/vr1tPJBIhJiYGy5Ytw/Tp0+Hk
      5AQA+OWXX5Ceno5Nmzahra0Nx44dw7/927/B1dV1aB4o3ZPS09ORlpZmstzKygoxMTF49NFH
      ERISoldWXV2Nbdu24fHHH8fSpUvNbufAgQMoKSnBp59+qhcASqUS27ZtM7meWCxGfHw8FixY
      oDc0qdFozK5nTFBQEN5+++1+rUPDIyMjA8eOHevXOr///e8RFRXV6z7T3XPPPYdZs2bp/u6+
      v9vb2+PDDz+EhYXFyAXA7du3AQBjxozBsmXL4Obmho8//tjsOjdu3EBGRgYAYMaMGXjllVd0
      ZRMnTsQf//hHvPnmm9BoNPj73/+O119/XVe+e/duox/qEokECxcuRH19Pf7yl78AAAoLC/We
      PLp/JScnw9PTE0DXh2tbWxsaGxuRl5eHzMxM5OXl4a233oKfn9+wbN/T0xPJycm6v9vb21FX
      V4fs7Gz8/PPPyMvLw7vvvqvro0gkQkpKClQqlV47mZmZKCwsxJw5c+Dt7a1X5uDgMCx9p/6L
      j4+Hh4eHwfKvvvoKnp6emDdvnkGZr6+v3t9+fn6YO3eu2e30/NLSva3bt2+jqKgIUVFRIxcA
      tra2WLFiBVauXAlXV9c+HQ2cOHFC9/8LFy40KH/44Yfh4uICuVyO48eP6wVAb9/otUcVAPSO
      HOj+NnHiRKNvlkWLFuHYsWM4ePAgjh49ihdffHFYtu/q6opp06YZ3X5qaipOnjyJ7du34513
      3gHQFQAJCQkG9evr61FYWIiJEydiwoQJw9JXGjwfHx+jw4Y7d+6Eo6MjZs6c2Wsbzs7ORveZ
      vpg7dy7+9re/ISMjA1FRUSM3DXTLli147bXX+jXUoh2vt7CwwIMPPmhQ3n25XC5HW1tbn9ot
      LCzEd999BwAIDAxEQEBAn/tE96958+bBxsYGFRUVv/q2xWIxFi9eDH9/f9y8eROtra2/eh/o
      /uPt7Q1/f3/k5uZCqVSOXABYWFjo/d2XyUg1NTUAur412draGq3T/fC3trbWaJ3Ozk7U1NTg
      p59+wn/8x3/ghRdeQH19PVxcXHgCmHS0+2RnZ+eIbF8kEiE8PBwAUF5ePiJ9oPvPtGnToFAo
      IJPJ7p3rAPpCexbb3FGDi4uLXv3AwEC98qSkJFRXVxsETmxsLN59912D+iRcUqkUCoUCkyZN
      GrE+KJVKADA6I4hoIOLj47F//35kZmaOrgBoaWkBAJPT83qWaet3V19fb/Dhb2lpiZiYGL7J
      CEDXfpOeno4DBw7A09MTzzzzzIj0Q6lU4sqVK7C0tOSwJA0ZV1dXhIeHIz8/f3QFgLu7Oxob
      G9HY2GiyTlNTk179nv7whz+gubkZcrkct2/fxk8//YSmpib87W9/w3fffYc//elPmD59+rD0
      n+49x48fh0QiQWdnJ5qbm9HY2IibN29Co9Fg4sSJeOaZZ0ZkFk1bWxt27tyJ2tpaJCQkwNJy
      VL1VaRjdunULe/fuNVkuFouRnJxscpgc6BoGKikpGV0B4OHhgRs3bqChocFkne5lxqZb9Zw9
      pFKpkJaWhj/96U9oamrCunXr8N133/Ebl0DIZDKjy0NCQjBjxgw4OjoO6/blcjnOnTun+7ul
      pQW1tbXIzc3F3bt3ERAQgBUrVgxrH2h0aW5uxpkzZ8zWefjhh80GQFxcHPbs2TO6AkA7F7qp
      qQlVVVXw8vIyqFNSUqL7f2MB0JOFhQUSExNhZ2eH9evXQ61W4/z583j22WeHruN0z3r55ZcR
      EBAAjUaD9vZ2tLS0oLKyEtnZ2di+fTs8PDzw2muv9XpvqoGqrq7Gt99+a7DcxcUFCxcuxEMP
      PcRbk5CeiIgIPP/882braC90NcXOzg6RkZGjKwC0MyIA4Pvvv8fy5cv1ypuamnQXigUGBvbr
      jdP93kN5eXkMAIFwcHDQTRzQTi6IiIjAI488goyMDHz55ZfYsmWL3uww7RW9fZm51lsdf39/
      3dXEP/zwAzIyMuDs7IwNGzYM+9EHjU5WVlZ6k10GKiEhYXTdDjopKQk2NjYAuu750/NcwI4d
      O3RT9rpfon/hwgVcvHgRarXaZNsXL17U/T+HfwjoGieNjIxEdXU16urqdMu15wTkcnmvbTQ0
      NMDe3t7g5oRadnZ2GDduHMaNG4fVq1cjISEBjY2N+Oijj/TOZxENtcmTJ4/MEUB9fb3BTY2K
      iop0/5+bm6s3gycoKAjBwcFwcnLCvHnzkJqaisrKSrz22mtYu3YtJBIJTpw4gV27dgHoelN1
      v7y+sLAQ27dvh5+fHxYvXozw8HD4+vrCyckJtbW1OH36NL7++mtdfZ4EJi03NzcAXTfx0g4D
      ubm5wcLCQnddiikqlQr19fV9nlosFouxatUqaDQaZGRk4KOPPsL69evh7Ow8uAdBZISVldXI
      BEBWVpbZm1P99a9/1fv7hRde0F2Kv3btWuTn5+P69evIz8/Hyy+/rFfX0tIS7777Luzt7Q3a
      raiowP/93/+Z7dvy5csHfJk13V/UajWuX78OQP98klgshkQiQUVFBcrKyhAUFGR0/UuXLkGt
      Vhs9V2WKWCzG6tWrodFokJmZiU2bNuH1118fkkN+op5GZAjI1OGwKd2nwEkkEmzfvt3oh7SL
      iws2b95scKOkJUuW4He/+53JNyrQNRb73nvv4dVXX+1X3+j+1NDQgB07dqC8vBw+Pj4GPxY0
      Z84caDQafP3110anJZeXl+PQoUMQiUR47LHH+rVtsViMlJQUxMfHo6amBps2bTI7841ooEbk
      COCxxx6DVCod8PqOjo7YunWr7q6NLS0tGD9+PIKDg/Vuuavl4eGBlJQUpKSk4M6dO6iurkZN
      TQ06Ozvh4eEBX19feHl59TuYaPRLTU3VO1q8e/cuGhoaUFNTA5VKBXt7e7zwwgsG682aNQuX
      Ll3CjRs3sHHjRjz44IPw9fVFZ2cnysrKcOnSJahUKjzyyCMDurmgNgQA6I4E1q9fP2yzkWj0
      uHbtGrZu3Wq2zuzZs/t0U8BRNQuoJ2dnZzz00EP9Wsfb29vgdrkkPNp7URUXF+stt7S0hIuL
      C0JCQjBp0iST86lFIhHWr1+PI0eO4NSpUzh58qReua2tLZ5++mmT+6dYLIZIJDK4J1bPOikp
      KdBoNJBKpdi0aRM2bNhgdHjTXDt07+vL66fdZxQKRa8/DNPzp3G17ffczoj/JCTRaNfW1qb7
      pSdLS0t4eXnBy8tLN2ON6F7FACAiEigOehMRCRQDgIhIoBgAREQCxQAgIhIoBgARkUAxAIiI
      BIoBQEQkUKP6SmAStsHcToSIeARARCRYvBKYiEigeARARCRQDAAiIoFiABARCRQDgIhIoBgA
      REQCxQAgIhIoBgARkUAxAIiIBIoBQEQkUAwAIiKB4s3giAA0NDSgtLQUpaWlAAB3d3eEhYXB
      z89Pr15lZSWqq6sREREBe3t7k+1pNBrIZDI4ODggNDTU7LZLSkpQUFAAAIiNjUVQUJDZ+to+
      9OTk5AR3d3c4OztDJBL1un5vj6G7y5cvw9raGuHh4XrL6+rqcOvWrT614erqqntsarUaeXl5
      fVovICAA7u7ufao7Whh7De3t7eHr69un12Qwz1/3bTMASNAUCgW+/PJLZGdnGy0PDg7Gm2++
      CbG462A5PT0daWlpeOONNww+DLu7e/cutm7digkTJuC1114z24cTJ07g8uXLAID6+nqsWbPG
      bH1tH0yRSCSYP38+ZsyYoeu3sfV7ewzdffbZZ5BIJHjvvff0ll+5cgU7d+7sUxtBQUF4++23
      AQBKpRLbtm3r03rPPfccZs2a1ae6o4W519DFxQVhYWFYunQpXFxcjNYZzPPXfdsMABKsX375
      BZ988gkqKyvh4+ODmTNnIjQ0FFZWVqiqqsL58+dx9epVqNVqox+kQ6G1tRVFRUWIiIiAXC6H
      TCaDUqmElZVVr+smJibC19cXQNc3QrlcjvLycmRnZ2Pnzp0oKyvD8uXLh6XfWuPGjcPzzz9v
      ts7+/fvR0NCACRMmGJT5+flh7ty5ZtcPCQkZVB/vZU888QR8fHwAdO2PFRUVuHnzJqRSKQoL
      C/HMM89g2rRpJtcfzPNnY2PDACDh2r17NyorKxETE4OUlBTY2Njoyvz9/REfH4+rV6/CwsJi
      2PqQm5sLtVqNqVOnoqGhAcePH0d+fj5iY2N7XTcqKsroN/iamhp8+OGHuHDhAiZNmoTJkycP
      R9cBdB1tSCQSk+WXL19GQ0MDfHx8kJSUZFDu7Oxs9gPufhcdHW3wGnZ2duLQoUM4deoUvvji
      C9jY2CA6Otro+oN5/ubMmcOTwCRMxcXFKCoqgr+/P9auXav34d9deHi42fH0wZJKpRCJRJgy
      ZQri4uIAAFlZWYNq09PTU/fNv7CwcNB9HKj29nbs2rULYrEYq1atgqUlv2/2haWlJZ566im8
      9NJLAIB9+/ahs7NzyLczefJkBgAJ05EjRwAASUlJw/oBb05LSwuuXLmC8PBwODk5wd/fHx4e
      HsjPz0dHR8eg2o6IiAAAlJeXD0VXB+Tvf/87GhoakJiYiMDAwBHrx2gVHR2N6Oho1NbW4ty5
      c8OyDQYACY5Go0FpaSkkEonJQ+tfQ05ODtRqtd5wT2xsLBQKhW5W0EAplUoAMHlkM9xkMhnS
      09Ph5+eHBQsWjEgf7geLFy8G0HXEOhwYACQ4crkcSqUSPj4+I/btH+ga6hGJRHoBoB0GGuzv
      HctkMgAjcwK1tbUVu3fv5tDPEPD29oatrS2qqqqGpX2+MiQ4169fB9A1xXOgNm3aNKg+XLx4
      EUVFRVi2bBmcnZ11ywMDA/HEE08gLS0NWVlZukAwJjc3F7dv3wYAqFQq1NfX49q1aygrK4NI
      JMKaNWsQHx8/qH72V05ODrZt2wZ/f3988MEHvZ5Av3z5Ml588UWzdd5//314enoOZTdHlbCw
      MBQUFKCpqQlOTk56ZYN9/hgAJDhubm4AuubcD9Tq1avNzqFvb2/H+++/b7Jce/LX2Gyf2NhY
      pKWlQSqVmg2A06dPGywTiUSIiYlBUlIS/P39e3kUQ6ulpQXffPMNLCwssGrVqj7NnoqIiOh1
      GmnPDz2hqaurg42NjdHnYbDPHwOABMfDwwMAUFtbO+A23N3dzV6d2t7ebrKsubkZJSUlsLS0
      xOHDhw3KNRoNAKCgoAAKhcLkOP6yZcvg5+eHlpYW7Nq1C+3t7Vi8eHGv88KHy7fffoumpiYk
      JycbXEFtipWVlcmLnahrX6itrdVdK9DTYJ8/BgAJjqOjI2xtbVFeXm72A3a4aE/+qtVqXLp0
      yWS9jo4O5OfnY+rUqUbLAwICdEchbm5u2LJlC/bv3w9ra2vMnj17WPpuilQqhVQqRUBAAObP
      n/+rbvt+dvnyZXR2dmLs2LHD0j4DgARp0qRJyMzMxPnz5zFnzpxfddvaef4bN26Eq6ur0Tql
      paXYvHkzsrKyTAZAd8HBwXj11VexefNm7NmzByqVCo8//viQ9tuU5uZmfPvtt7C0tMSqVauG
      7appodFoNNi/fz8ADNutMPhKkSAlJydDLBYjLS0NjY2Nv9p2tcM/QUFBuhkexv6NHz8eLi4u
      yM/Ph0Kh6FPb2hCwtbXFvn37cPLkyWF+NF2+/vprtLS0YMGCBbpbU9DgqNVq7N+/H7dv30Z0
      dLTR22gMBQYACdLYsWORkJCApqYmfPDBB6ioqDCoI5fLkZqaCrVaPWTb1Q7/mDu5C0B3dbBS
      qdRN6eyLkJAQXQjs378fx48fH2yXzcrIyEBOTg4CAwORmJg4rNsSArVajYqKCnz00Uc4deoU
      HBwcsGzZsmHbHoeASLBWrFgBkUiE9PR0fPDBBwgODkZISAgsLCxQVVUFmUyGzs5OJCUlDdmw
      hnZ+f1/u9RMXF4ezZ88iKyurX9M5tSGwZcsWpKamQqVSGb0Pz4EDB+Dg4GC0jUWLFpk88ajV
      2dmJPXv2AOiahvr555+brS+RSLBkyRK9ZdeuXcPWrVvNrjd79uxh+wY80rq/Bo2Njbh9+7bu
      Ir5JkybhueeeMzuLZ7DPHwOABMvS0hIrV65EYGAgfvjhB1y/fh1Xr17VlXt6eiIhIUFvOqP2
      //t6g7ju9drb21FSUoKAgACzN1DTCgsLg5OTEwoKCqBSqQy2ba4PISEhWLduHf785z/j8OHD
      sLa21p3r0IaZ9noIYx544IFeA0ClUqGtrQ0AUFFRYfQoqrvu01LFYjFEIhEUCkWv97XvS1iO
      NtrXrvtrYGdnh6CgIPj5+SE8PNzsUeJgnr/u+49Io51zRiRwSqUSVVVV6OjogLu7O6cn0n2P
      AUBEJFA8CUxEJFAMACIigWIAEBEJFAOAiEigGABERALFACAiEigGABGRQPFKYBq1BvuziURC
      xyMAIiKB4pXAREQCxSMAIiKBYgAQEQkUA4CISKAYAEREAsUAICISKAYAEZFAMQCIiASKAUBE
      JFAMACIigWIAEBEJFG8GRwSgra0Nt27dwq1bt1BXVwdnZ2d4eHggLCwMrq6uva6v0Whw+PBh
      dHZ2YsyYMZg3b57Z+mq1Gnl5eQbLrays4ObmBolEAmtra6PrFhcXo62tDSEhIXB2dja7ndra
      WlRUVMDX1xeenp69Pg76dVRWVqK6utpgub29Pby8vODk5GR0Pe1+4+joiLCwMLPbqKqqwp07
      dxAREQF7e3ujdRgAJGgqlQqpqalIS0uDsdtiicViREdHY+HChfDx8THZTmlpKY4ePar7OzY2
      FmPHjjVZX6lUYtu2bSbLxWIx4uPjsWDBAoN2rl69isOHDyM2NhYvvviiyTY0Gg22b9+OsrIy
      rFu3jgFwD0lPT0daWprJchcXFyQlJWHWrFkQi/85UKPdb8aNG4f169eb3caFCxfw/fff4803
      30RoaKhBuVqtZgCQcDU0NGDbtm0oKyuDm5sbHnjgAQQGBkIikaCurg6VlZU4f/48cnJyEBYW
      ZjYAsrKyAAAPPvggLl68CKlUigULFvTaB09PTyQnJ+v+bm9vR11dHbKzs/Hzzz8jLy8P7777
      rt6H9xNPPIGLFy8iOzsbpaWlCA4ONtmnsrIyTJgwAZGRkX19WuhXlJiYCF9fXwBdH8gNDQ2o
      qKhAdnY2du/ejZs3b2LFihVDvl2lUom//OUvDAASrm+++QZlZWWIiopCSkqK3mGyl5cXIiMj
      8dhjjyEjIwN2dnYm29FoNMjKyoKzszOWLFmCH3/8sc8B4OrqimnTphksX7RoEVJTU3Hy5Els
      374d77zzjq7MxsYGTz75JL766iv84x//wBtvvGGwvkqlwsGDByESifAv//IvvfaDRkZUVBTC
      w8MNlldXV2PTpk24ePEipkyZMuQB/sMPP+DKlSs8CUzCVFJSAplMBl9fX7zyyismx0jFYjGm
      T5+OyZMnm2yrtLQUDQ0NmDJlCsaMGYPIyEhUVlbizp07A+6fWCzG4sWL4e/vj5s3b6K1tVWv
      fMaMGfDz88PVq1chk8kM1r948SJqamp09Wh0GTt2LJ555hkAQH5+/pC2rVKpcPLkSYhEIgYA
      CdPBgwcBAE8++SREItGg2tL+MllcXByArvF/4J/DQgMlEol03w7Ly8sNyrTf7A8cOKB3/kKh
      UODIkSOwtrbGk08+Oag+0MgZN24cgK4TxkMpOzsbDQ0NiImJYQCQ8Gg0Gty6dQuenp6Ijo4e
      dFvZ2dlwdHTUfVhHR0fD0tJy0AEAdI3VAjA6I2jChAmIiopCZWUlfvzxR93yU6dOobm5GXPm
      zIGLi8ug+0Ajw9Kya4RepVINabu3b98GAMycOZMBQMIjl8vR0dEBLy+vQbd148YN3fCP9khi
      zJgxmDBhwqCHgZRKJa5cuQJLS0sEBAQYrbNkyRKIxWIcOnQISqUSTU1NSEtLg5OTE+bMmTPg
      bdPIu3nzJgDA399/SNutq6sD0DUBgSeBSXC08689PDwMyq5fv270x+YjIyMRFRVlsFz7LV87
      /KMVGxuL/Px8SKVSvVk+fdXW1oadO3eitrYWCQkJum+DPfn4+OCBBx7AhQsXcObMGdTX10Oh
      UGDp0qWwsbHp93bp3qBQKPDtt98C+OdQUHc1NTXYu3ev2TauXr1qdPkvv/wCAHBzc2MAkPC0
      tLQAABwcHAzKbt++jTNnzhgst7W1NQgA7ewfBwcHRERE6JXFxMRg9+7dyMrKMhsAcrkc586d
      0+tbbW0tcnNzcffuXQQEBPQ6DTA5ORkZGRk4dOgQ1Go1fHx8MGvWLLPr0L2htrZWNwFBpVLp
      poGeOXMGzc3NiI+Px5QpUwzWa2hoMLqf9sXdu3dhaWkJa2trBgAJj5ubGwCgvr7eoGzmzJl6
      M35u3ryJrVu3Gm3n+vXrkMvleOCBB/Qu1gEAOzs7jB8/HpcvX0ZlZaXJawiqq6t13/S6c3Fx
      wcKFC/HQQw/BysrK7ONxcnLC3LlzdSe2tcNCdO/76quvjC63sbHB/PnzkZiYaLQ8ICAAa9eu
      Ndv20aNHcenSJYPlzs7OqKysREtLCwOAhEc79KM9FO7O0tJS78SpdrzUGO3wT2VlJXbu3GlQ
      Xltbq6tnKgD8/f2xdOlSAF1zszMyMuDs7IwNGzbA0dGxj4+o6+KwQ4cOwcvLy+hQFd2bul8x
      LhKJ4OzsDE9PTwQGBpqcmgx0nWdyd3c327atra3R5dr1GhoaGAAkPI6OjrC1tcWtW7fQ0dFh
      8p475mhn/wBdJ4Jv3Lhhsq65YSA7OzvdGG94eDhEIhF+/vlnfPTRR1i/fr3Je8L0pD1KGMhj
      oZHz6KOPGr0QbDhpA+DmzZsMABKmqKgoSKVSnD17FnPnzu33+teuXYNcLsf06dN1F+wY8+mn
      n+LKlStmh4G0xGIxVq1aBY1Gg4yMDF0I9HbDN6L+0J6vOnv2LKeBkjAlJydDLBbj1KlTaGho
      6Pf62uGf+Ph42NramvynnR1kbGaRMWKxGKtXr0Z8fDyqqqqwadMmyOXyfvePyJSwsDCEh4ej
      oqKCAUDC5OXlhenTp6OlpQX/9V//heLiYqP17t69a7BMO/yjPdFrzpQpUyAWi/t1UZhYLEZK
      Sgri4+NRU1ODTZs2DSikiEzR3q6cQ0AkWL/5zW9gYWGBixcv4uOPP0ZAQAACAwPh7u6OhoYG
      3LlzByUlJQbrXbt2DY2NjZg+fbrJ+fla2iuEi4uLUVFR0ef78mhDAAAyMzOxadMmrF+/vtcT
      f0R9ERkZiaVLlzIASLisrKywYsUKhIeH48yZM7h9+7bu6kuga1ZGYGAgZs6ciZkzZ+qWa3/I
      pefFX6bExcWhuLgYMplMFwBisRgikQgWFhYm19OGgEajgVQqxaZNm7Bhwwazs0NodNC+7uZe
      f2P6st+Y2lZPjz/+OEQaY7+CQSRAarUalZWVugtlvLy8TE6lI7ofMACIiASKJ4GJiASKAUBE
      JFAMACIigWIAEBEJFAOAiEigGABERALFACAiEiheCUyjVl9vsEZExvEIgIhIoHglMBGRQPEI
      gIhIoBgAREQCxQAgIhIoBgARkUAxAIiIBIoBQEQkUAwAIiKBYgAQEQkUA4CISKAYAEREAsWb
      wZEgVVZWorq6GlFRUbCysjJaR6FQoLCwEFZWVoiKitItr6urw61btxAWFgZHR0ej7fbk5OQE
      d3d3ODs7QyQS9do/uVyOoqIiVFdXo729HRKJBB4eHhg/fjxsbW119TQaDXJzc+/ldg0AABVY
      SURBVPv6sAEA9vb2iIiIMNvfnqytrREZGan7W61WIy8vDwDg4OCA8PBws+vLZDLY2Nhg3Lhx
      /eqrUJSUlKCgoAAAEBsbi6CgIJN1tc+9RCKBv7+/yXo3b95EfX09/P39IZFI9NbVYgCQIKWn
      pyMtLQ1vvfUWQkJCjNbZu3cvLl26hISEBL0AyMnJwb59+7B27VpMmTLFaLumSCQSzJ8/HzNm
      zIBYbHgArlarceDAAZw9exZKpdKg3NbWFgkJCUhKSoKTkxM0Gg22bdvW14cNAAgKCsLbb7/d
      p/5qubq64r//+791fyuVSt12LSwssHHjRnh6eppcf8eOHXB3d8eGDRv61VehOHHiBC5fvgwA
      qK+vx5o1a0zW1T73kZGRWLdundE61dXV+Oijj6BWq3Wvdfd1tRgAREZIpVJcunQJEokEv/nN
      b/q9fmJiInx9fQF0fajL5XKUl5cjOzsbO3fuRFlZGZYvX26w3j/+8Q+cPn0aEokEiYmJCA4O
      hkgkQlVVFUpLS3Hx4kWcP38e0dHRiIyMhEgkQkpKClQqlV47mZmZKCwsxJw5c+Dt7a1X5uDg
      YLDd5ORksx/gNjY2JpcrFAqkpqbit7/9ba/PCxlqbW1FUVERIiIiIJfLIZPJoFQqTR6Z9qaz
      sxOff/45FAoFnnnmGd1+2J2npyeSk5MZAEQ91dXV4euvv4ZYLMaaNWv0hlz6KioqyuiwSE1N
      DT788ENcuHABkyZNwuTJk3VljY2Nug//d955B/b29royX19fxMXFYf78+Thz5gxcXV0BACKR
      CAkJCQbbqa+vR2FhISZOnIgJEyb02t+JEyeaPBIyZ9y4cWhqakJWVhbKysrMDl2Qcbm5uVCr
      1Zg6dSoaGhpw/Phx5OfnIzY2dkDt7d+/H+Xl5YiOjsYjjzxitI6rqyumTZvGk8BE3anVanzx
      xRdoa2vDk08+ieDg4CFt39PTU/fNv7CwUK/s+vXrAIAZM2boffh3Z2dnh6SkJPj4+Axpvwbj
      qaeeAtB19EL9J5VKIRKJMGXKFMTFxQEAsrKyBtRWQUEBzpw5AxcXF6xcubLX+gwAom6OHj2K
      69evY/z48Zg7d+6wbEN7Ara8vFxvuVqt1vvvaDFu3DhERUWhpKQEMplspLszqrS0tODKlSsI
      Dw+Hk5MT/P394eHhgfz8fHR0dPSrraamJnz55ZcAgJSUFJNfIrpjABD9f1evXsWxY8fg4OCA
      1atX92m2zkBoT+72HFf38/MDAFy4cAG//PLLsGx7uDz11FMQiUQ4cOAA+BtTfZeTkwO1Wq03
      3BMbGwuFQqGbFdQXGo0GO3bsQHNzMxITE/s824oBQASgra0NX3zxBdRqNVauXAkXF5dh25b2
      W3LPMXcvLy/Ex8ejubkZ77//Po4ePYrm5uZh68dQ8vX1xYwZM1BZWYn09PSR7s6okZWVBZFI
      pBcA2mGg/vzm9enTp1FYWIjg4GAsXLiwz+vxJDAJ2pEjR+Du7o6Kigo0NDRg9uzZeidmh9rl
      y5exd+9eWFlZGT3Jt2LFClhbWyM9PR2HDh3CkSNHEBUVhZkzZ2Ly5MmwsLAYln4dP35cN1fc
      mPDw8F5PSi5cuBCZmZk4fPgwpk2bNuBZLELR0tKC4uJihIaGwtnZWbc8MDAQ7u7uumEga2tr
      o+uXlZXh66+/hkajwY8//ghbW1usWbPG6PRiUxgAJGjauddaDzzwwJC0m5ubi9u3bwMAVCoV
      6uvrce3aNZSVlUEkEuH55583eiLX1tYWzz33HB5++GFcvHgRmZmZkMlkkMlkcHR0xKJFizBr
      1qwhH57qbey+tbW11wBwdXXFo48+ipMnT+L7779HYmLiUHbxvmNs+EcrNjYWaWlpyM/P1x0R
      9NTa2ooLFy7o/p44caLZEO9OLpfj3LlzDAAStpUrV8LX1xdZWVk4efIkvvjiC/zhD38wOe+9
      r06fPm2wTCQSISYmBklJSWav4AS6vgUGBgbi6aefRm5uLi5duoSioiLs2rULRUVFeOGFFwbV
      v55efvllBAQEmCw39S20p8TERPzwww84ceIEHnzwwT6diBQq7ewfcwEglUpNBkBISAj+9V//
      FZ2dnfjrX/8KmUyG9PR0zJw5s9dtV1dX49tvv2UAkLB5eXkhMDAQAQEBuH37NgoKCrBr1y6z
      V2L2xbJly+Dn54eWlhbs2rUL7e3tWLx4cb9nFllZWSE+Ph7x8fG4evUqPvvsM0ilUkRGRvbp
      jd5XDg4OQ3Lew87ODvPmzcN3332HY8eOYenSpUPQu/tPc3MzSkpKYGlpicOHDxuUa0+kFxQU
      QKFQGP1CMmbMGAQGBgIAfvvb3+J///d/8c0338Df37/XLxj+/v5YunQpTwITAdANy0gkEmRm
      ZuLMmTODai8gIADjxo1DXFwcXn31VYwZMwb79+/H2bNnB9xmeHg4UlJSAKBfM0R+bbNnz4a7
      uzvOnTuHurq6ke7OPUk7/KNUKnHp0iWDf9oT6R0dHcjPz++1vbCwMCxZskR3q4e2tjaz9e3s
      7DBu3DgeARBp2dnZYe3atfif//kffPfddwgMDERoaOig2w0ODsarr76KzZs3Y8+ePVCpVHj8
      8ccH1Jb26uKamppB92u4WFpaYuHChdixYwcOHjyoCy36J+2FXhs3btRd1d1TaWkpNm/ejKys
      LEydOrXXNh977DGUlpYiMzMTO3bswO9+97tezxXxCICoG39/fyxfvhwqlQqfffYZmpqahqRd
      bQjY2tpi3759OHnypEGd+vr6Xi8C096508vLa0j6NVwSEhLg5+eHjIwMgwvehE47/BMUFARv
      b2/Y2toa/Td+/Hi4uLggPz8fCoWiT20/++yz8PHxgUwmw/Hjx3utzwAg6mHGjBl4+OGHIZfL
      8fnnnw/ZlbkhISG6ENi/f7/BG/TcuXP44x//iIyMDKMXUzU3N2PHjh0AoHdr5nuRSCTCU089
      BY1Gw1tE9KAd/jF1cldLe3sIpVLZ5yusbWxs8NJLL8HW1haHDh0yuN1ITxwCIjJi2bJluHXr
      FkpKSnDgwAEsWbJkSNrVhsCWLVuQmpoKlUqFpKQkAF1TQGtqavDFF18gNTUVAQEB8Pb2hpWV
      Faqrq5GdnY2Ojg4kJCRgxowZQ9IfrT179pg9Cezg4IDnnnuuX21GRkZi/PjxKCoqAgC4u7sP
      qo/3C+0FXn252VtcXBzOnj2LrKwsxMfH96l9T09PrF69Gtu2bcP27duxYcMGuLm5Ga3LIwAS
      pN4uqLK0tMSLL74IR0dHnDp1Svch1td2zbUfEhKCdevWwdbWFocPH8apU6cAAPPnz8frr7+O
      KVOmoLGxETk5OTh27BgOHjyIn376CU5OTnj22WexatWqQT++nvVu3ryJvLw8k/+Ki4v11hOL
      xRCJRL1uZ8mSJbpx6OG6iG00aW9vR0lJCQICAvo0Zz8sLAxOTk4oKCjQ3fJb+9ybExMTg8TE
      RLS2tmL79u265T1fN5GGN+4guudoNBrI5XLU19dDJBLBw8PD4NfHiAaLAUBEJFAcAiIiEigG
      ABGRQDEAiIgEigFARCRQDAAiIoFiABARCRQDgIhIoHgrCBq1+vObqURkiEcAREQCxSuBiYgE
      ikcAREQCxQAgIhIoBgARkUAxAIiIBIoBQEQkUAwAIiKBYgAQEQkUA4CISKAYAEREAsUAICIS
      KN4MjgSpsrIS1dXVBsudnJzg7u4OZ2dniEQik+vX1dXh1q1bCAsLg6Ojo16ZWq1GXl6ewToW
      FhaQSCTw9PSEpSXfevRPDQ0NKC0tRWlpKQDA3d0dYWFh8PPz06s32P22J+6FJEjp6elIS0sz
      WS6RSDB//nzMmDEDYrHhgXJOTg727duHtWvXYsqUKXplSqUS27ZtM9m2SCRCbGwsFi1aBE9P
      z4E/CBr1FAoFvvzyS2RnZxstDw4OxptvvqnbBwe73/bEACBBS0xMhK+vL4Cub+5yuRzl5eXI
      zs7Gzp07UVZWhuXLlw+obU9PTyQnJ+v+bmtrQ11dHXJycpCVlYWCggJs2LCBISBQv/zyCz75
      5BNUVlbCx8cHM2fORGhoKKysrFBVVYXz58/j6tWrUKvVBh/mQ7Hftra2MgBI2KKiohAeHm6w
      vKamBh9++CEuXLiASZMmYfLkyf1u29XVFdOmTTNYvnjxYhw4cACnTp3Cjh078NZbbw2o7zS6
      7d69G5WVlYiJiUFKSgpsbGx0Zf7+/oiPj8fVq1dhYWFhsO5Q7Le5ubk8CUxkjKenp+4bVGFh
      4ZC2LRaLsXjxYvj5+eHGjRtobW0d0vbp3ldcXIyioiL4+/tj7dq1eh/+3YWHh/drTL8/+61U
      KmUAEJkSEREBACgvLx/ytsVise4bXGVl5ZC3T/e2I0eOAACSkpL69QHfF33Zb1taWnDlyhUG
      AJEpSqUSAEx+Oxss7UwglUo1LO3TvUmj0aC0tBQSiQTR0dFD3n5f9tucnJyucwtDvnWi+4RM
      JgMAhISEDEv7N2/eBNA13kvCIZfLoVQq4ePjM+Tf/oG+7bdZWVkQiUQMACJjLl++jL1798LK
      ygqxsbFD3n56ejpKSkrg6+sLe3v7IW+f7l3aefweHh5D3nZf9tuWlhYUFxcjNDSUs4BI2DZt
      2mSwTCQSITo6Gm+99dagvp0XFxfjxRdfNFoWEhKCf//3f0dYWNiA26fRydraGgDQ0dEx4DYG
      s99+/vnn0Gg0WLNmDQOAhG3ZsmXw8/NDS0sLdu3ahfb2dixevBhz584ddNuOjo544IEHdH9b
      W1vDw8MDY8eORUBAwKDbp9FJ+82/trZ2wG0MdL9tbm5GSUkJLC0tcfjwYQYACVtAQIBuNo6b
      mxu2bNmC/fv3w9raGrNnzx5U2z4+Pli0aNFQdJPuI46OjrC1tUV5eTkUCsWAJhkMdL/VnvxV
      q9W4dOkSzwEQaQUHB+PVV1+Fra0t9uzZg9OnT490l+g+NWnSJLS2tuL8+fODbqs/+21WVhYA
      YOPGjdiyZQsDgKi77m+mffv24eTJkyPdJboPJScnQywWIy0tDY2NjYNury/7rXb4JygoCN7e
      3rC1tWUAEPUUEhKiezPt378fx48fH+ku0X1m7NixSEhIQFNTEz744ANUVFQY1JHL5UhNTYVa
      re5Tm73tt9rhn7i4ON0yngMgMkL7ZtqyZQtSU1OhUqmQlJQ00t2i+8iKFSsgEomQnp6ODz74
      AMHBwQgJCYGFhQWqqqogk8nQ2dmJpKSkPt3ZEzC/30qlUgDQmx7KACBB0t5gy9iNtrRCQkKw
      bt06/PnPf8bhw4dhbW2NOXPm9Nq2WCyGSCQy2zaRpaUlVq5cicDAQPzwww+4fv06rl69qiv3
      9PREQkKC3n400P32wQcfRElJCQICAiCRSHR1RRqNRjMMj42IiPpBqVSiqqoKHR0dcHd3h4uL
      y7BvkwFARCRQPAlMRCRQDAAiIoFiABARCRQDgIhIoBgAREQCxQAgIhIoBgARkUDxSmAatbSX
      thPRwPAIgIhIoHglMBGRQPEIgIhIoBgAREQCxQAgIhIoBgARkUAxAIiIBIoBQEQkUAwAIiKB
      YgAQEQkUA4CISKAYAEREAsWbwZGg3LlzB1VVVf1aJzQ0FE5OTgCAuro63Lp1C2FhYXB0dNSr
      p1arkZeXp/t73LhxsLOz67V9bZsAMGbMGIwfP75f/aPRp7KyEtXV1YiIiIC9vb3JehqNBjKZ
      DA4ODggNDTXbZklJCQoKCgAAsbGxCAoK6rUfDAASlIyMDBw7dqxf6/z+979HVFQUACAnJwf7
      9u3D2rVrMWXKFL16SqUS27Zt0/29dOlSPP744722f+TIEaSnpwMA7Ozs8PHHH/erfzT6pKen
      Iy0tDW+88QbCw8NN1rt79y62bt2KCRMm4LXXXjPb5okTJ3D58mUAQH19PdasWdNrPxgAJCjx
      8fHw8PAwWP7VV1/B09MT8+bNMyjz9fXt1zY8PDwgl8uRmZnZawB0dnYiNzcXrq6uUKvVUCqV
      /doWEQC0traiqKgIERERkMvlkMlkUCqVsLKyMrseA4AExcfHBz4+PgbLd+7cCUdHR8ycOXPQ
      2/D29kZAQACysrJQU1MDT09Pk3ULCwvR1taGhx56CDKZDHK5fNDbJ+HJzc2FWq3G1KlT0dDQ
      gOPHjyM/Px+xsbFm1+NJYKJhkJCQAKD3H63RlmvrEw2EVCqFSCTClClTEBcXBwDIysoyu05x
      cTEDgGg4REZGws7ODhkZGSbrKJVK5OXlwdfX1+hRCVFftLS04MqVKwgPD4eTkxP8/f3h4eGB
      /Px8dHR0mFzvyJEjDACi4WBpaYm4uDjcuXMHFRUVRusUFBTg7t27/PZPg5KTkwO1Wq033BMb
      GwuFQqGbFdSTRqNBaWkpA4BouEybNg0AkJmZabRce9geHx//a3aL7jNZWVkQiUR6AaAdBjI1
      BCmXy6FUKnkSmGi4hIeHw9XVFZmZmVi8eLFemUKhgEwmQ1hYGNzc3EaohzTSzpw5g+zsbJPl
      nZ2dZtdvaWlBcXExQkND4ezsrFseGBgId3d33TCQtbW13nrV1dUAOAuIaNhov92fOnUKN27c
      QEhIiK5M+8bUHiWQMJn78O8LY8M/WrGxsUhLS0N+fr7uiECrpaUFAAOAaFhNmzYNp06dQkZG
      hl4ASKVSWFhYGLwxSVhWr15t9kKw9vZ2vP/++ybLtcOI5gJAKpUa7Gfao04GANEw8vf3h7e3
      N7KysrBs2TKIxWLcvXsXBQUFiIyMNHsbALr/ubu7w93d3WR5e3u7ybLm5maUlJTA0tIShw8f
      NijXaDQAuiYbKBQK2NjY6Mq0F0MyAIiG2bRp03Dw4EEUFxdjwoQJyMvLg1Kp5PAPDYp2+Eet
      VuPSpUsm63V0dCA/Px9Tp07VLXN0dIStrS0DgGi4aQMgMzMTEyZMgFQqhY2NDaKjo0e6azSK
      aS/02rhxI1xdXY3WKS0txebNm5GVlaUXAAAwadIkTgMlGm4SiQQhISHIyclBU1MTCgsLERMT
      YzAzg6ivtMM/QUFB8Pb2hq2trdF/48ePh4uLC/Lz86FQKPTaSE5OZgAQ/RoSEhLQ1taG3bt3
      o7Ozkxd/0aBoh396m0SgvT2EUqmETCbTKxs7diwDgOjXEBcXB7FYjLy8PDg6OmLChAkj3SUa
      xbQXePV2szcAZu8NxAAgAmBhYTHoNsRiMUQikdG2HB0dMXHiRADA1KlTIRYbvvWGog80Omhf
      676+5t3rtbe3o6SkBAEBAZBIJL2uGxYWBicnJxQUFEClUumViTTauUJERCQoPAIgIhIoBgAR
      kUAxAIiIBOr/AWC66/F9DS2UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='part b.Overdue' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdaXBU553v8e/pVVK31Nr3FYSExCIQYgezDGCbxA5j4zixHQ+eTDxTmUxN
      ZmpuanLvi7m599atmspMJXOTm8SJ4yyOwdhDjBfARizGYBZhBBLakYT21r60pN67z31B6Vy3
      JTAGZOT0/1OVSrnPoqebc87vOc95nucoqqqqCCGECCuKoii6+10IIYQQ94cEgBBChCkJACGE
      CFMSAEIIEaYkAIQQIkxJAAghRJiSABBCiDAlASCEEGFKAkAIIcKUBIAQQoQpCQAhhAhTEgBC
      CBGmJACEECJMSQAIIUSYkgAQQogwJQEghBBhSgJACCHClASAEEKEKQkAIYQIUxIAQggRpiQA
      hBAiTEkACCFEmJIAEEKIMCUBIIQQYUoCQAghwpQEgBBChCkJACGECFMSAEIIEaYkAIQQIkxJ
      AAghRJiSABBCiDAlASCEEGFKAkAIIcKUBIAQQoQpCQAhhAhTEgBCCBGmJACEECJMSQAIIUSY
      kgAQQogwJQEghBBhSgJACCHClASAEEKEKQkAIYQIUxIAQggRpiQAhBAiTEkACCFEmDLcyUaq
      qt7rcgghhPic3VEAOBwOOjo67nVZhBBhxOv1YjQaURTlfhclbCmqVOeFEPdBY2MjeXl5mEym
      +12UsKQoiiLPAIQQIkxJAAghRJiSABBCiDAlASCEEGFKAkAIIcKUBIAQQoSpOxoHcLf8fj/t
      7e3o9XoyMjIwGo33oxhCCDGr/H4/ExMTREREYDab59yYh8/1DkBVVdrb2/nd737HD3/4Q15/
      /XUcDsfnWQQhhPjcdHZ28tvf/parV68SDAbvd3Gm+dzuAAYGBnjvvfd4//33aWpqwul0otfr
      8Xg8n1cRxBw1OTnJ4OAgPp/vluuZzWYyMzNDalGqqjI8PExbWxt9fX0oikJCQgKFhYXYbLbZ
      LroQtzQ0NMT58+eZN2/enJxC53MJgIaGBn76059SXV2Ny+Wakz+EuH86Ojo4ePAgw8PDt1wv
      KSmJf/iHf9CaDFVVpba2ln379uFyuQgEAgDo9Xqio6P5u7/7OxITE2e9/EJ8UX0uATA2Nobd
      bicuLo4nnngCi8XCz372s8/jT4svgMzMTHbt2oXL5Zpxud1up7y8nLi4OAyGG4dsMBjkww8/
      5I033iAzM5OdO3eSk5NDMBikvb2dixcvzslbbnHnpiqO97IdfTb2OZvudXk/lwCIi4tj165d
      rFmzhnnz5vHWW299Hn9WfEFER0dTVFQ04zK/309rays6nY4tW7ZoB/7Q0BAffvghaWlpPPfc
      c8TFxWnbFBcXU1xc/LmUXcwuVVVxOBzY7XbGxsZQVRWbzUZqaiqxsbHa8dDd3U0wGCQtLU2r
      JExtPzExwfDwMImJiVgsFuDGRHQdHR2Mjo7i8/mwWq2kpaWRkJAw7eLa09MDQHp6OsFgkJGR
      EYaGhlBVlcLCQm09r9fLwMAAo6OjuN1uTCYTPT0905o2p8qTlJREZGRkyLLx8XGGhoZISUkh
      IiJCK4uqqgwMDNDW1oaiKMTHx5OWlkZUVNRd/b6fSwAsWLCABQsWfGFSVswdPT091NfXM2/e
      PObNmwfcOBmqqqoYHh7m6aefDrn4iz8dwWCQrq4u3n77bS5cuIDD4UBRFCwWCytWrODRRx8l
      Ly8PnU7H0aNHaWlp4fnnnyc7O1vbh9/v5/Tp05w/f56nnnqKhQsX4nK5OHz4MO+99x4OhwNV
      VdHr9RQXF/PMM8+Qm5sbUo69e/diMBj427/9W2pqajhy5AgNDQ1YLBZ+/vOfAzAyMsKHH37I
      qVOn6OzsRFVVDAYDgUCAgYGBkP3V19dz8OBBnnnmmWkVn/r6el577TW+9a1vUVBQoH2HhoYG
      Dh48SF1dHcFgEJvNxrZt29i2bdtdHf+fSwDIhV/cCZ/PR1VVFWNjY+zatQud7kanNY/HQ2dn
      J3FxceTl5d3nUorZMjY2xr59+zh37hwbNmxg6dKl6PV66uvrOX78OOPj4/zVX/0V6enpZGVl
      sXfvXlasWBESAC6XiyNHjmAwGIiNjQXgxIkTvPTSS5SVlfHkk09iNptpa2vjtddew+1281//
      638NqVm3tLSg0+m4cuUKv/jFLxgdHaW0tJSFCxcC4HQ6OXr0KK+88gq5ubns2rWLhIQEnE4n
      V65cob+/P+R7jY6OUl9fz/j4+LTvPLVscnJS+6yjo4Pf/OY3DAwM8MwzzxAREcGZM2fYu3cv
      ERERPPTQQ3fclf6+jAMQ4nbY7XYaGhrIy8sLqZU5nU4mJyfJysrCYDDQ09NDf38/k5OTREdH
      k5WVFdI8IL54gsEgtbW1nDp1ioceeohnn31W69W1atUqrFYrr732GitWrCA5OZmSkhKio6Op
      qqpix44dIU09TU1NPPHEEyQlJdHf38/rr79OXl4e3/72t0lOTkZRFMrKyjAYDPz617/mwoUL
      bNmyJaQ8XV1dvPDCCxiNRr773e+yaNEioqOjUVWV5uZmDhw4wOLFi9mzZw/z589Hr9cTDAZJ
      Tk6mpqbmjn8Ht9vNhQsXuH79Ot/85jfZtm0bBoOBvLw8xsbGOHHiBMuWLSMrK+uO9i8jgcWc
      5Pf7aWxsxG63s2bNGu2EhhvdRl0uF21tbfzHf/wH//Ef/8HLL7/Mf/7nf/K73/2OH/3oR3z4
      4YfS2+wLzO/3c+HCBRITE9m+fTs2mw1FUVAUBavVyoYNG8jJyaG6upqJiQmio6NZv349LS0t
      tLa2avtRVRWLxUJZWRl6vZ7a2lrsdjtPPPEEKSkpWiUhIiKCRx99FJ1Ox0cffTStPL29veh0
      Ov7xH/+RtWvXEh8fj9FoxOv1UlNTQyAQYOfOneTn56PX6wHQ6XQYjUbtv++Ew+GgurqaoqIi
      ysrKMJlM6HQ6srOz2bBhA9evX6e3t/eO9y93AGLOUVWV3t5eLl++zMKFC7V23ilutxuPx8PQ
      0BDz5s1jw4YNpKenYzKZaGtr44MPPuDVV18lIiKCFStWyJ3AF1AwGKS1tZXk5GRycnJC/g0V
      RSElJYXs7Gy6u7txu93YbDa2bNlCeXk5NTU1FBcXo9frCQQC5Ofns3jxYuBGTd7tdpOYmEhX
      V9e0v5uYmIjdbicYDIYccxkZGfzzP/+z9hxqisfjob29nZycnGnH6b3gcrno6emhqKgIl8sV
      UmZFUbSRxqqq3tFxLgEg5hy/38+1a9cYGBhg48aNWtvtFLPZjMlkYt26dTz66KOYzWZtWVZW
      Fnl5efziF7/g5MmTlJSUyFQjX0BTvX9sNhsRERHTlptMJiIjI5mcnMTv96MoCqmpqRQWFlJX
      V8fQ0BDJycnU1dWxadMmrWfQxMQEgUCA//E//seMF2un00lOTg5erzfk72ZlZU27+MON51SD
      g4NER0eH3KXeK1MX+JMnT1JVVTVtmaIoBINBgsHgHd1pSACIOWXqxK+oqCAnJ4f58+dPO1Gj
      oqKIjIzE7XbP2MyTmZlJYWEh165dY3R0lKSkpM+r+OIemerq6Ha7tWc7Hzf1eUxMjBbw8fHx
      rFixgnfeeYeuri4SExM5deoUf/d3f6dtFxMTg8Fg4PHHH79p75mPjzf5NDqdjoiICHw+H36/
      f8bvcTeMRiMxMTHk5OSwbdu2GSszCxcuvOO/M+sBEAgEGB4eZmRkRPusr68PuJG2169fZ2Ji
      AoCEhAQSEhJmu0hijpuqwa1cuXLG48FisRAZGUlbWxsej2fGGqLVakVVVW10sPhi0ev15OTk
      cOnSJa5fv87SpUtDlvf29nL9+nXy8/O1f3+z2UxRURGHDh2isbERm81GfX19yGjw1NRUTCYT
      NpuN7du333U5jUYjycnJVFZW0tvbO23k+c2eQwUCgdsaqGg2m0lOTkZVVZYtW0Z6evpdl/nj
      Zj0Aprphvfvuu9pnY2NjwI3uVT/+8Y+1VPvqV7/Krl27ZrtIYg4LBAKcPHmSpKQkrdvfJ5nN
      ZrKzs2loaODatWuUlZWFLFdVFbvdjslkmtZ8JL4Y9Ho969at49ixYxw/fpzs7Gzt33JiYoIP
      PvhAe5g71fSiKAq5ubnk5+dz8eJF+vr6po0uLykpITU1lVdffZWCgoJp3YgrKiqw2+185Stf
      ua1yRkZGUlxczJEjRzhz5gw5OTna3Yrb7aa9vV273k0xGo1MTk7S19eH3+/HYDCgqip9fX1c
      uXIlpHtobGwsy5Yt4w9/+AMffPABX/nKV7TBY8PDw5w+fZrFixczf/78z/Dr/n+zHgDBYJCB
      gQGuXbsW8rmiKFpPjimf/KFEePn4AK+HH36Y+Pj4GdfT6XSUlpby0Ucf8eabb5KamkpGRoa2
      vKqqiuvXr7NixYqQ5wPii0NRFBYuXMjmzZt56623GBwcZPPmzRgMBj744ANOnTrFxo0bWb58
      eUhzTUJCAosWLWLv3r1UV1dPu3NISEjg6aef5n/9r//F97//fR544AGys7MZGxvj6tWrVFVV
      sWrVqtsOAJ1Ox6JFi1i2bBn79u2ju7ubtWvX4nK5qKio4NKlS9NmPI6LiyM+Pp5XXnmFwcFB
      UlJSqKmp4fLly9jt9pDQMplMrFmzhgsXLvDLX/4Sh8NBZmYmzc3NXL58mf7+fv7bf/tvdxwA
      iip95cQc4XK5+NGPfkQgEOC73/3utHbfT6qqquKPf/wjTqeTZcuWkZCQQE9PD3V1dcTHx/P3
      f//3s/JgTtwbjY2N5OXlYTKZbrrO+Pg4b7zxBocOHdIqiNHR0WzdupWnnnpqxhlfGxsb+b//
      9//S0tLCP//zP7Nx48Zp61RVVfHCCy/Q3d2N3+9Hr9cTExPDrl27eOihh7Bardq6//2//3fM
      ZjPf//73b1rOvr4+fv/733P27FlcLpfWhLV06VJqamrYvXs3GzduRK/X4/V6ee+999i3bx/D
      w8MoikJ0dDRr1qwhJSWFDz74gH/4h3+gsLAwZOqT/fv3c/z4cdxuNxERERQUFPD444/fcUcH
      RVEUCQAxZ3R2dnL06FEKCwvZsGHDbW3T1tbGkSNHcDgceL1ezGYzGRkZ7NixQx7+znG3EwDw
      /zsGtLe3EwgEyM3NveVAP7/fT39/Py6Xi6ysrJvuPxgM4nA4GBkZwWq1Eh8ff1d99oPBIEND
      Q3R1dWGxWMjJybnpHejU3D49PT0YDAYyMzNvq7myt7cXl8tFcnLyXVduJADEF97Ug96RkRGc
      TidWqxWbzYZer5f+/3Pc7QaAmB2KoijSDVR8oSmKgsFgkNq+EHdApoIQQogwJQEghBBhSgJA
      CCHClASAEEKEKQkAIYQIUxIAQggRpqQbqJgVfr9/xtkRhZgSDAbxer23NSmamB0SAGJWTM1R
      LsTNTA3iu9cvURG3T355IYQIUxIAQggRpiQAhBAiTEkACCFEmJIAEEKIMCUBIIQQYUoCQAgh
      ZsnUWIdAIHDTF8TfTxIAQggxS4aHhzl58iTt7e1zMgBkIJiYc1RVxePxMDIyQkxMzKe++k5V
      VdxuN6Ojo9hsNqKiom66biAQoL+/n4mJCQKBAJGRkSQkJGCxWGZ8g9jo6OhNRzTr9Xqio6ND
      XkouxMd1dnby6quvsnv3brKzs+fcoDc5csWcoqoqLS0tVFVVMTQ0xAMPPMDChQtvun4wGNTW
      HxkZYfPmzSxYsGDGdYeGhqioqKC1tZXJyUkCgQAREREkJiaydOlSli5dOi0E3n33Xe1l5J8U
      FxfHAw88QGpq6p1/YREW5urrSSUAxJzR39/P+fPnqa2tZXh4GKPRyIoVK266fl9fH+fOnaO+
      vl5bf+XKlTOu63A4ePfdd6mtraW4uJiVK1diNBoZGBigsrKSzs5OFEVh6dKl2jY+n4+amhoS
      EhKYN2/etH1arVaMRuPdf3Eh7hMJADEnNDQ0cOTIEex2u3aB/vDDD2+6fm1tLe+++y79/f0s
      WrSIFStWcO7cuZuu39TURFNTE+vWrWPr1q2YzWYURcHv91NcXMyLL77Ihx9+SHFxsdakMzIy
      AsCSJUvYsGHDtH0qiiIBMMum2s1VVUVVVa0m/cn//3j7+sdr2x/fXlGUkPWn/je1zSf3+cl9
      KIoSsj8gpEnnk8s+/nc+ub9PlmemZTN9v4/PnTTT9p+VBICYEzweD6mpqTzyyCPk5+fT1NTE
      2bNnb7l+eno6jz32GHl5edTV1d3yZOjt7cXtdrN+/fqQZwQmk4nMzEwKCwvp6OhgeHiY5ORk
      4MYdhqIopKWlERERce++rLgtqqridDo5f/485eXlXLt2jWAwSH5+Plu3bmXjxo3as5v9+/cz
      OjrKk08+SVxcnLaPYDDIlStXOHfuHA8++CALFiwgEAjQ3NzM/v37aWpqwul0kpqayrZt23jw
      wQenPXN6+eWX0ev1fP3rX2d4eJgzZ85QUVGBXq/nf/7P/wmA1+ulo6OD48ePU1tby+joKNHR
      0ZhMJgYHB0P2V1dXx/vvv8/OnTvJy8sLWVZbW0t5eTmPPfYY2dnZ2ncYGxvj6NGjHDx4EFVV
      WbRoEY888gjFxcWYTKY7/o0lAMScUFRUxOLFi9Hr9be1/uLFiykpKbnt9WNiYjAYDAwNDYVc
      IODGyTs+Pk5ERETIyT84OIiiKCQmJt7+FxH3jMvl4q233uLgwYMkJSWxefNm9Ho9jY2NvPTS
      S9jtdh5//HFsNhsmk4ny8nIKCwvZsmWLtg+3282hQ4cYHh7my1/+MnDjIvuv//qvWCwW1q1b
      h8ViobW1lZdeeonR0VG+8Y1vhNzZVVZWYjAY2LBhAy+//DIfffQRSUlJ2sXb5/Nx4cIFfvvb
      3+J2u8nJySE/P5/JyUlaWlrweDwhdwH9/f18+OGHrF69eloATC3bunWrFgBDQ0O8/PLLVFRU
      sHnzZhRFobKykp/85Cc8//zzlJWV3fZ58EkSAGJO+Ky1mM+6/vz580lNTeXYsWMoikJ6ejp6
      vR6Hw0FtbS3d3d088MADIQEwMDAA3LjNHxsbQ6fTERERgcFgmLMP9f5UTHUGOHToEMXFxTz3
      3HNkZWUBN+7Mfv/733P8+HEKCwtZs2YNq1ev5pVXXqG6upr169drx4fH46GmpoZNmzaRkZHB
      +Pg4e/fuJSIigr//+7+nuLgYRVEYGxvjt7/9Le+88w6rVq1i8eLFIeUZGhpi7969XLt2jccf
      f5z169eTlpaGqqp0dXVx4MABTCYTe/bsYfXq1ZhMJgKBAOfOnePnP//5Hf8OPp+PyspKLl26
      xEMPPcTu3buJiori6tWr/OxnP+P48ePMnz//jispEgAiLKSlpbFjxw4++OAD3njjDVJTU7UA
      cDgcrF27ljVr1oRsMzQ0hMvl4u233wZuBEFkZCRxcXEUFxeTkZEhQTBLAoEAly5dQlEUdu7c
      SVZWlvZbp6SksHPnTpqamqiurqakpIS4uDhKSkpobm6mu7tbq1lPvZNi2bJlGI1GqquraWpq
      4hvf+AaLFi3S/p7NZuOrX/0qx48f59y5c9MCoKurC71ez1/8xV+wZs0arRnR5/NRV1eH3W5n
      z549rFmzRrt70Ov1WCwWTCbTHR8nExMTXLlyhbS0NLZu3YrVagWgsLCQTZs28d5772G32+84
      AOZWp1QhZolOpyMxMRGdTofdbqetrY3Ozk7a29uZmJjAZrNNa/tdunQpK1euxGKxEBkZSSAQ
      oL29nffff5/XX3+dysrK+/Rt/vRNtdOnpqaSn58fcgGduoObN28enZ2duFwuzGYzGzdupKen
      h6amppB109LSWLJkCXCjX77H42H16tXT/mZqaiqJiYl0dXVNW2axWHjqqaemPUPyer20t7eT
      lpZGYWHhPe8U4HQ6tUBLSkrSPjebzWRmZuJ2uxkfH7/j/csdgAgLQ0NDHDhwgJGREf7iL/6C
      7OxsFEVhYmKCs2fPUl5ejqIorF69WrvYrFy5ktLSUm0fwWAQv99PZ2cnr732Gu+//z4JCQnk
      5ubep2/1pysYDNLb20tWVhY2m23acqvVSmxsLJ2dnfh8PnQ6HXl5ecTHx9PY2Mj69euxWq3Y
      7XbKysqIjo4GbjzX8fl8/Mu//MuMg7J6enqIjY3F4/FgNpu1z/Py8ti4ceO0C7zX68Vut5OQ
      kDDt2dK94PF4GBoa4vjx41RXV4csm5ycZGhoSBvUeCfPASQAxJ+8YDDI6dOn6ezs5Pnnn9fa
      kuHGrf/u3bt55ZVXOHnyJNnZ2aSnpwM3f85gs9nQ6XT84Q9/oLW1VQJgFiiKgtVqxev14vV6
      p/XC8vl8eDweIiIi0Ol0KIpCUlISq1evpqKigs7OThYuXMj777/Prl27tFCPjIxEp9OxbNmy
      GXt2rVq1irS0tGlNNkaj8b50+dXr9VqzY0lJyYyhlZube8dNTBIA4k+e0+lkaGiIlJSUkNvo
      KYqiUFJSQlNTEz09PVoA3MrUOndz+y1uTqfTkZmZyfXr17Hb7dN6ywwPD2O320lJSdFq6lFR
      URQVFXHs2DHa2tpITk7m8uXLfOc739G2S0pKwmQysXbt2pC7uztlNBpJTEzk+vXrjIyM3PZd
      wEzjA2YyNVLdZrPx+OOPEx8ff7dFDiHPAMSfvEAgQCAQwO/33/RF9X6/H1VVteUejwefz3fT
      k9ThcKAoyi3nHRJ3Tq/Xs3TpUm10uMvl0pZ5PB4uX75Me3s7BQUF2r+Boijk5uaSm5vLlStX
      OHbsGBMTEyH7XbBgAbGxsbz55psMDQ1N+7vt7e3TmlpuxWQykZeXR1dXF1VVVbjdbm2Zz+dj
      eHg4pOxwI9xcLhcOh0M73lRVxeFw0NXVFbIPq9XKggULqKuro6qqCp/Ppy2bnJykurpa6612
      J+QOQPzJs1gsJCYmUllZSU1NDWVlZSG30iMjI5w/f56oqChtXp/u7m7q6+spKioiLy8v5BZ7
      YmKCU6dOERERQUZGxuf+fcLBVDNNQUEBhw4dIhAIsGzZMvR6PVevXuXIkSNkZWVRWloa0laf
      nJzMwoULOX78OA0NDaSkpITsNzs7m+3bt7Nv3z5eeOEFVq9eTUJCAk6nk87OTioqKkhNTQ2Z
      EuRWjEYjixcvJj09nTfeeAOXy8WiRYvwer00NjZy9uxZBgcHQyoS0dHRmM1mysvL0ev12rOM
      uro6rly5EhJaUVFRWrPWK6+8gt/vJzk5md7eXhobG6mvr+cv//IvZ7yzvR0SAOK+83g8tLS0
      hNRkBgYGcLlc1NXVaSeEyWSisLAQi8XCtWvXQmpwfX19uFwuamtrtcnbzGYzhYWFxMXFsWrV
      KlpbW3n33Xfp7Oxk3rx52ijNuro62tvb+bM/+zPS0tKAG3cN1dXV1NTUkJWVRVpaGjabjYmJ
      CRobG7l+/TplZWXTmibEvaEoCvHx8Tz77LPs3buXP/7xjxw9ehSdTofD4WDBggV84xvfmBbA
      RqORRYsWceLECdrb20Oaf+DGncUjjzyCXq/n4MGDVFZWEhERgd/vx+v1smrVKh5++OFp5bnZ
      LJ6KopCZmcmzzz7Lb3/7W/bv309MTAyBQACj0Uhqaqr2zGhKXl4emzZt4t1336WlpQWz2YzH
      4yE7O5uFCxcyOTkZMhXEggULeP7553n11Vf5zW9+g16vx+VyYbPZ2LJly10dg4o6FyepFl94
      Xq/3ptMof5LD4eCdd96hpqZG+ywYDOLz+TAYDFrvhujoaHbv3k1ycjJvvfUW9fX1t1x/6gHv
      /PnzCQaDDAwM8N5771FbW4vRaNTmAoqKiuLBBx+kpKREq036fD76+/s5ceIETU1N+P1+dDqd
      Nk/Ltm3bWLVq1adOVS1urq2tjYyMjFs+XA0Gg4yPj9Pd3U1zczN+v5/CwkIyMjKIjo6eseeL
      0+mkoaGBsbExSktLZ+xFNDXd+ODgIIODg8TExJCSkqJNP/7xC/bQ0JAWSDfj9/sZHR2lo6OD
      trY2oqOjKSwsJCYmBq/Xi9VqJTIyUptPaGJigpaWFtra2tDr9cybN08bnOhyuYiLi9OOUbhR
      IRkfH+fatWtMTk6Snp5OfHw8VqtVm9fqs7JYLIoEgJgVnyUAPk9T7xoYGBjA4/EQHx+PzWa7
      ZRe6QCDA2NgYo6OjWCwWEhIS0Ov1MgjsLt1OAIjZY7FYFGkCEmFFURQiIiJCuoJ+Gr1eT3x8
      /D3vgSHE/Sa9gIQQIkxJAAghRJiSABBCiDAlASCEEGFKAkAIIcKUBIAQQoQp6QYqZsWdvqJO
      hA9FUTAYDBgMchm6X+SXF7NCr9dLCIhb0ul0GI3Gu3qpubg70gQkhBBhSgJACCHClASAEEKE
      KQkAIYQIUxIAQggRpiQAhBAiTEkACCFEmJIAEEKIWeJ2u7l+/TojIyPMxXdvyUAwMeeoqkog
      EMDr9WIymW57pKjP58Pn86GqKpGRkdpr/VRVxefzEQwGb7n91MjUTw5gm9re4/Hg9/tRFAWT
      yURERMRN3xUrBEBtbS0//OEPeeqpp9i5c+ecG/U8t0ojwp6qqgwNDdHS0kJHRwelpaXMnz//
      U7fzer3U1NTQ0NCAqqr8+Z//OVFRUcCN979evnyZ3t7eW+4jMjKSJUuWhLxoPBgM0tvbS01N
      De3t7QwNDWEymUhJSWHp0qUUFhbKSFZxU3Ox1v9xEgBizhgbG6O5uZmKigoaGhpQFIXs7OxP
      DYBgMEhHRwdHjx6lt7cXj8fDl770JS0AgsEgg4ODdHR03HQfra2tREVFkZ6eHhIAra2tHDly
      BLvdTk5ODrm5ufh8Pvr6+jhx4gQZGRnyqkjxhSUBIOaEzs5OTp06xdWrV4mLi2Pp0qU0Njbe
      1rZOp5OzZ8+iqirz58/n2rVrIcsjIiLYuHEjK1eunLFG5nQ6eeGFF0hMTCQ7O1v73OPx8Pbb
      bzM6OsojjzxCUVER0dHR+P1+BgcHcTgcWsiI2Tf1b6coypze52y61+WVABBzQnd3N3a7nQce
      eIDly5czODhIS0vLp24XDAapra2lsbGRTZs24fF4aG5uDllHp9MRGxt7032cOYb646IAACAA
      SURBVHMGv99PWVkZNptN+7y6upquri4eeeQRysrKMBqNwI2J7jIyMkLuFMTsUFWV5uZmTp8+
      TVNTE8FgkIKCAtatW0dRUZF2ITxx4gQ+n49NmzYRERGhbR8MBuns7KS6uprS0lLt32x8fJxD
      hw7R0NDA5OQkGRkZbN68mZKSkmkX15MnT6LT6di0aRM+n4/6+nquXLlCMBhkz5492nrj4+Nc
      vHiR+vp6hoaGiImJwe/3Mz4+HrK/jo4OampqWLFiBSkpKdOWXb58mbVr15KUlKSVJRAIUFlZ
      yZtvvgnAkiVL2Lx587TtPysJADEnFBUVUVBQgNVqxWQy4XA4bmu7yclJ3nnnHTIyMli9ejXn
      zp37TH93YmKCc+fOER0dzapVq7QTzu/3c+bMGaxWK6tXr9Yu/uLz4/f7uXDhAj//+c/p6+sj
      JSUFo9FIZWUlx48f57nnnmPLli0YjUaam5s5efIkSUlJlJaWavvwer288847VFdXM3/+fDIy
      MhgeHuZf/uVfaGpqIiMjA6vVyvvvv897773H9773PTZv3hwSAm+99RZGo5GysjLeeOMN9u/f
      j8PhID09nT179qCqKq2trbz44ot89NFHKIpCamoqExMTDA0N4XK5Qr5XS0sLr7zyCikpKdMu
      4M3Nzbz88svk5OSQlJQEgMvl4u2332bfvn2kpaURCAT49a9/zcWLF/n2t79NXl7eHd8RSACI
      OeHjNe/b5fP5+OMf/4iiKDz44IOfeR/BYJCLFy/S29vLY489RmRkpLZsbGyM0dFRli9fjtls
      xuPxaD2M9Ho9ZrNZprueRaqq0tHRwS9+8QuMRiM//OEPWbp0KYqi0NzczL/927/xu9/9jqSk
      JJYtW8bWrVvZv38/58+fp6SkRPu3cblcHD9+nNLSUubNm4fP5+OnP/0pLS0tfO9732Pr1q0o
      ikJfXx//+3//b370ox9RUFAQcnfndrtxOBy8+uqr7N+/nxUrVvDnf/7nFBUVoaoqfX19vPTS
      S1y5coU9e/Zox5Lf7+fkyZP89Kc/Dflufr8fl8tFIBCY9r2nlk31WAsGg1y6dIlXX32V5cuX
      853vfIeYmBhOnz7Nv//7v/Pmm2/yrW99C6vVeke/s/RhE19IwWCQqqoqrl69yvr162+rp9An
      jYyMcPXqVWJiYigpKQlZNjY2pnUdvXLlCseOHeP1119n7969vP3221RVVTE2Nnavvo74hEAg
      QEVFBcPDw3z961+npKQEnU6Hoijk5+fz3HPPMTk5SWVlJS6Xi9TUVIqKiqivr6e/v1/bj9/v
      x+l0snz5ciIiIrh27RoVFRV86Utf4s/+7M+0mnNKSgp//dd/zeTkJMeOHZtWnpaWFg4dOsQT
      TzzB9773PVatWkV0dDTBYJCrV69y+fJlnn766ZCKhMFgIC4uLqRi8VlNTExQUVFBTEwMTzzx
      BPHx8RgMBlauXMlDDz3EpUuXaG9vv+P9SwCIL6Te3l5OnjxJRkYGGzdu/MzbB4NBGhoa6Onp
      YcOGDdNOUofDgd/vp6KigoMHD9LQ0IDP50NRFFpaWvjDH/7AsWPHbrupSnw2gUCAmpoacnJy
      tJr/FEVRyMvLo6ioiObmZpxOJ2azmc2bN9PZ2UlDQ0PIvlJTU7VmoWvXruFyudixY8e0v1lU
      VERsbOy0Z0hTHn74Yb72ta8RFxenfTb1zCklJYXS0tK7utjPZGJigtbWVoqLi8nMzNQ+t1gs
      LFy4EIfDwejo6B3vX5qAxBeO0+nk3LlzjI2N8fTTT99RT5yRkRHq6uqw2WwUFxdPG9A1dQte
      WFhIaWkpiYmJWCwWFEVhaGiIkydPcu7cOZKSkti4ceMXphfJF0UwGKSnp4fk5GQSEhKmLY+J
      iSExMZGGhgY8Hg8Gg4HFixdjNBppaGhgzZo1REZGMjo6ytKlS7W29v7+frxeLwcPHgx5WDzF
      6XQyOjqKz+cLee6Tl5fH7t27iY6ODlnf4/HQ09NDamqq1mZ/L7ndbgYGBnA6nbz00kshx2lX
      Vxfj4+NMTEwQDAbvaFCiBID4QlFVlaamJiorKykpKSEtLQ2n06kt9/l8wI2236lRxJ8cqBUM
      Bmlvb+fatWts3bqV+Pj4aRdwq9WKXq9nwYIF05qHbDYbERERtLW10drayurVqzGbzbP0jcXt
      hKuiKCQnJ1NSUkJtbS19fX3k5uZy8eJFNm/ePO3i2NPTM+MznIULFzJ//vxpo8ZjYmJCav5T
      gsEgTqcTq9U6Y0eBe1UxcDgcdHZ2hnymqiolJSXExsbe8YAzCQDxhTI+Pk5NTQ3Dw8OcP3+e
      y5cvhyx3u914PB5+/OMfYzabWbt2LQ8//LC2XFVVxsfHqaqqIjY29qYjeW02G0ajkeHhYVRV
      nXYix8bGkpGRwcTEBBMTExIA95hOpyM1NVVr4khMTAxZPjk5yejoKAkJCdq/n81mY/ny5fzs
      Zz+js7OTzMxMTp06xRNPPKFtl5CQgNFo5LnnngsZ8/FxM1UabsZgMBAbG8vY2BhOp3Nad+Nb
      XZhv56JtMpmIi4sjOzubPXv2zHi3GxUVdcdTkkgAiC8Uk8lESUkJycnJMy5vbGykoaGBdevW
      YbVaycnJCVmuqiqdnZ1cvXqVrVu3kpmZOWMtLTY2FqvVyqVLl9i+ffu0tt2p+YHMZrNc/GeB
      Xq9n0aJF7N+/nwsXLvDggw9q8+gEAgHq6uqoqalh586dWCwWbZuCggIyMzO5ePEiLpcLu90+
      rSnHYrFw4sQJ/uZv/mZaM9DExARer/e2e9WYzWaysrL46KOPqK+vJyUlRbuzCAaDeL3eab19
      FEXB6/Xi8Xi0ysXU8eR0OkPWt1gs5Obmag+3ly5dql3s/X4/DoeDYDAo3UBFeIiIiGDJkiUs
      WbJkxuXBYJDm5mY2bdo04+Avr9fLmTNnSEhIoKio6Kb9+81mM2vWrOGNN97g/PnzrFu3LuRC
      39fXR09PDytWrJDRwLNAr9ezYcMGjh49yltvvYXNZiM/Px9FUWhvb+fAgQNERUWxZs2akN8/
      MzOT4uJiLl68yLVr16ZdyJcsWcKqVas4dOgQqamprFixAovFgtfrZWxsjBMnThAIBPinf/qn
      2yqn2WymtLSUw4cPc/DgQaKiosjJySEQCNDT00N5eXlIryS4UWP3+XxUVFSQlpaGxWJhdHSU
      xsZG3nnnnZCHujabjY0bN3LhwgX27duH0WgkLi5Oezh86tQpHn/8ccrKyu7od5YAEPfd1Nw6
      Hx8x2dHRgcfjobu7m/r6euDG7XZaWtod93mGG1NONDU1sXbtWrKysm657ooVK7h48SLHjh3D
      7/eTn5+P2WxmeHiYEydOaGEkM4Lee1ODqZ599ll+//vf83/+z/8hPz8fnU6njRB/5plnpnX/
      jYyMZPHixZw8eZLm5ma+8Y1vhCw3GAw888wzOJ1Ofv/733P06FESEhJwOp309vYSFxfHl7/8
      5RnLc7Nyzps3j69+9avs3buXf//3f9fGG/T392sPZz++fXZ2NmVlZRw9epSmpiZsNht2ux1V
      VbXmp6n1dTodixcv5mtf+xpvvPEGP/nJT4iJiaG/v5/JyUny8/NvOcr9U39nda5PVyf+5I2P
      j3PkyBHq6uq0zzweD6Ojo0RHR2s1PKvVyq5du8jPz7/pvt59912OHDnCD37wgxlPjBdffJG2
      tjaee+652xo70NLSQnl5OS0tLVp788jICCaTiR07drBixYo5N8XvF0VjYyN5eXm3bG/3eDw0
      NDRQXV1NR0cHwWCQ7OxsFi1axOLFi2fsydPf38/x48ex2+3s2rWLefPmTVunr6+PS5cu0dvb
      q83plJiYSFFREfPnzw8p06lTpzAYDKxfv/6m5ZyYmKC6upq6ujrsdjuRkZHagLKBgQGKiorI
      yspCp9MRCARoaWnh7NmzdHV1aVOLFBQUYLFY6OjoYPXq1SQkJGhB4HK5qK2tpbKyEqfTSWJi
      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
      Lvh/5azsVPLlh9UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='part d.Payments' width='384'>
      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
      Y2N0d3ej0+nYuHEjra2t9PX1ERcXx+rVq7l27Rr9/f2sX79eSmxzOBxMTEyQmZlJV1cXWVlZ
      c3bBPR4PERERDAwMAEgfyNOnT5OWlsbly5fZtWsXOp1O1kN0BYX5xufz8bvf/Y6IiAhpm9fr
      pampiaeeeoof/ehH7Nu3j3fffZeIiAhsNhunT5+muLiYrVu3KgZyn8KsV6S1tZWSkhJ6enpu
      2KfRaFi1ahUmk4n6+no6OjpYvXo1sbGxNDc309XVxX333UdLSws+n4/m5snphebmZlJSUigu
      LsblcqHT6TCZTOzevZv6+nr0ej1FRUU4nU56e3sB6Ovrk5LBrl27xvr167HZbDdocjgcDAwM
      sG3bNsrLy2lpaaG4uJjo6GhaWlpobW1lx44d2Gw2uru76e/vZ/v27ZSWljI+Pk5PTw+XLl3C
      ZDKRnp4uPajnCpPJxPLly6c93CcmJnC73cTFxREVFcXp06c5evQoHo9nTo+toBDK/P73v+eh
      hx6aNiKfmqZVqVQkJSXR1tZGd3e3lFTZ2NjImTNn+OEPf8ipU6eCJV22zDgC8Pv9DA4OcubM
      GYaGhpiYmJi2v6uri66uLmJiYvD5fGg0GoxGI7GxsQwNDUm2D+Hh4VKq9xSBQGCas2hMTAwa
      jQadTkdjYyMulwu9Xn9DdTJRFOnq6sLj8WA2mxkdHZ223+l00tfXR0VFBUlJSYyOjmIymYiO
      jmZkZAS9Xo9OpyMyMhK73U53dzfl5eWkpKSQn5/PyZMn0Wg0REZGYrVa7+ji3ipVVVWsX78e
      gPXr16NWq2loaKC7u5ucnJx50aCgIGe8Xi81NTVYLBZKS0spKytj69atGI1GHI7J3BWr1Upl
      ZSVut5t3332X5ORkMjMzeeCBB1i+fDnPPPMMu3fvDvKZyIsZG4D+/n62bdtGbm4u3d3ddHd3
      S1FCRqMRlUqF0+lkYmKCJUuWYLPZOH/+PA6HgwMHDtDQ0MDp06cRBAGDwYDFYuHEiRM4nU6q
      q6txuVyUl5ezdu1aaTV96u/abDYcDofU609LS6OhoYHIyEgKCgooLi7GbrdTV1eHwWCQfIYS
      ExOJjo4mEAggCAJ+v5+zZ89is9nYu3cvbW1tnDlzBqfTyZ49e+js7EQQBAKBAEajEbVaTWpq
      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
      CIh0zs1pAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='part e' width='384'>
      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
      UtIgyMSXXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='part f' width='366'>
      iVBORw0KGgoAAAANSUhEUgAAAW4AAAGACAYAAACN7Ih9AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcsklEQVR4nO3df1SW9f3H8dfNDwX5oQgKCIRANjA0PeG0sgxz1dZZriyVXMc1dLmZbecs
      q/XHztp3VrNjzlpmdDwnk5puetSlVtqZWv5coWJCCJIpAoEJdyC3qMD9/cPDfWTc/PAWp2/3
      fJzT6fb6dX8uOefp5ee67luH2+12CwBght+VHgAA4OIQbgAwhnADgDGEGwCMIdwAYAzhBgBj
      CDcAGEO4AcAYwg0AxhBuADCGcAOAMYQbAIwh3ABgDOEGAGMINwAYQ7gBwBjCDQDGEG4AMIZw
      A4AxhBsAjCHcAGAM4QYAYwg3ABhDuAHAGMINAMYQbgAwJuBKDwAALnT27Fl9+eWXkqS4uDhF
      RUVd4RFdfRxut9t9pQcBXEuqq6uVl5ensrIy1dTUaODAgYqLi1NGRoYiIyOv9PD+a3bv3q3T
      p08rIiJCI0aM6PZ+FRUVuv/++yVJc+fO1ZQpUy7XEM3iihvoIWfPntWSJUu0YsUKnT17tt16
      f39/3XbbbZozZ46SkpI8y0tKSrR79275+flp0qRJCgoK+m8O+7J57rnnVFdXp7S0NC1fvvxK
      D+eaQriBHjJ//nytXbvW82s/Pz/16dNHp06dkiQ1Nzfrk08+0Z133tkm3F988YUWLVokSRo7
      dqwSExP/uwOHOYQb6AEHDhzwRDsxMVGPP/64Ro8erb59+6qurk6FhYX629/+pp07d17hkeJa
      QLiBHrBv3z7P63nz5ik1NdXz6/DwcI0ZM0ZjxozRV1991WPvWVlZqePHjysxMVEDBw7sseO2
      amho0KFDhxQREaHBgwfL4XD0+Hu0av1bSWho6GV7j2sJ4QZ6QHV1ted1eHh4h9slJyd7Xi9e
      vFgff/yxJ1qSNHPmzDbx+tGPfqQZM2Z4ft3S0qK3335b7733npxOp2d5ZGSksrOzNXny5Hbv
      +dprr2nLli0KCQnR8uXL5Xa7tWbNGuXm5qqyslLPPvusJk6c6Nm+oKBA8+bNU0lJiVqfXQgN
      DdVPfvITPfnkk/Lz65mniF0ul15//XV9+umnqqiokCT1799f6enpPXL8axnhBnrA4MGDPa8X
      LFigP/3pTwoODu50n5MnT+rYsWNtltXU1Kimpsbz69raWs/r5uZm/frXv9bu3bu9Hmv+/Pna
      t2+fXnzxxXbHPHbsmMLCwiRJr7/+ut5++23P+qamJs/rjz76SH/4wx907tw5Sefn6VtaWnTq
      1Cnl5ubqyJEj+stf/nLJV99lZWV64oknVF5e3m6sn3zyySUd+38B4QZ6wK233qqgoCA1NjZq
      27Ztmjhxoh566CHde++9uu6667zu88Mf/lCpqanavXu3tm3bJun8FXf//v0926SlpXler169
      2hPthIQEzZkzR4MHD1ZJSYkWLVqk6upqbd68WZmZmbr77ru9vueHH37oibbD4VBkZKTnbwgN
      DQ2aP3++zp07p379+umPf/yjRo0apZqaGr344ovavn27duzYoU8++UTjxo27pN+v+fPne6Kd
      kJCgrKwsxcTEqLGxUVu3btWmTZsu6fjXOsIN9IC4uDg9/fTTeuGFF9TU1KSamhrl5OQoJydH
      w4YN049//GPdd9996t27t2efjIwMZWRkyN/f3xPue++91+tTJWfOnFFOTo6k89Miy5Yt8wQ3
      OTlZI0eO1EMPPSSXy6W//vWv+sEPftDuqri+vt5zNX7HHXe0eyxxxYoV+u677ySdf5Tv1ltv
      lSRFR0dr/vz5mjBhglwul5YvX35J4d65c6d27dolSRo+fLhef/31Nn87SU9PJ9xd4CPvQA+5
      //779c477+j73/9+m2h+8cUXeuGFFzR16tQ2NzEvxtdff+2Z0542bVq7efSBAwfqoYceknT+
      AywXzrlfqKGhQVOmTNGCBQvaRFuS8vPzJUmBgYEaM2ZMm3W9evVSRkaGJOngwYNqaWnx6Twk
      KS8vz/P66aef7nJKCe0RbqAH3XDDDVq8eLH++c9/6pe//GWbOJaVlWnOnDn6+uuvL/q4R48e
      9bweOXKk120u/HTihdtfaPLkyZo7d67XOeqysjJJ0oABA3To0CHt27evzX+tHz1vamrSt99+
      e9Hn0Kr1/CMiIto8fYPuY6oEuAxiY2OVnZ2t7Oxs7du3TwsXLlRhYaEaGxv12muvacGCBRd1
      vMrKSs/rjr6748LlJ06caLe+T58+euqppzp8j6qqKknnr9hnzpzZ6Xiqq6t9fgSx9Q+I+Ph4
      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
      cZLO36CcMGFCh9v1799f0vlYt+7z3XffSZL69u3b4X4Oh0NhYWFyOp2djsPlcmnp0qVqaWnR
      9OnT1a9fvy7H7nK5utymVevTMgCuLoTbB7Gxserbt6/27t2rAwcOaPjw4e22cbvdnkcDL7xy
      bg13WFhYp+8RFham8vJyud3udlfR69evV2RkpI4fP67a2lplZmZ6HQOAaxPh9kFAQICmTZum
      xYsXa/HixbrtttuUnp6usLAw1dbWqqysTJ9//rlOnjwpSW3C29jYKEldPvXRu3dvNTc3q6mp
      qd2Hbf7zSZWxY8d2e+zdfTbb5XJ1+YcLgCuDcPvopptu0syZM7Vy5Upt375d27dvb7N+4MCB
      SkhIUFlZmWfKRJLCw8MlSadOnVJ0dHSHxz916pSCgoK8fkJy+vTpiouLU15enj766CMtXbpU
      zz77rHr37t1DZwfgaka4L0FGRobS09N15MgRlZeXq7m5WTExMYqNjdWAAQP0j3/8Q2VlZYqK
      ivLs0zq3XVdX1+mx6+rqOpwHj4mJUWJioq677jqVl5fr4MGDWr58uWbMmNFzJwfgqkW4L1FQ
      UJDS0tKUlpbWbt3Ro0clSZGRkZ5lrTE+ceJEh8d0uVxyuVyeG5odcTgcys7O1rx58/TZZ58p
      OTlZ48eP9+U0ABjC44CXSXl5uQ4fPqzBgwe3me5ojXFnz2jn5eXJ7XYrPj6+y/fp06ePZs2a
      pcDAQK1atUqlpaWXPngAVzXCfZls3rxZknTvvfe2WT5o0CAlJyfr6NGjqqio8Lrvrl27JEm3
      3357t94rISFB06ZNU3Nzs3JycrqchgFgG+H20bffftvhc9Zr167Vrl27FBsbqxEjRrRb3/rl
      UW+++aYaGhrarFu3bp1KS0uVkpKiQYMGdXs8t9xyi8aNGyen06m33nrror7nBIAtzHH76NCh
      Q8rNzdWIESOUkpKiiIgIVVdXq6CgQCUlJerfv79mzpzp9ZOMo0aN0t69e5Wfn6+XXnpJo0eP
      VkhIiIqKirR//36FhoYqKyvrosc0efJkHTt2TMXFxVqzZo3X70IBYB/h9tGgQYMUGxurvXv3
      au/evZ7lrR91nzFjhufRv//k7++vWbNmadmyZdqzZ4/ef/99z7qoqCjNnj3b69W2v79/p2MK
      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
      wg1co/4fJisPeSfPq/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='part h. rental&amp;store' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
