install.packages("RMySQL");
install.packages("ggplot2");
library(RMySQL);
library(ggplot2);
library(DBI);
connection = dbConnect(MySQL(),user="root", password="root",
dbname="classicmodels", host="localhost");
install.packages("RMySQL");
install.packages("ggplot2");
install.packages("RMySQL")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
connection = dbConnect(MySQL(),user="root", password="rootroot",
dbname="classicmodels", host="localhost");
myQuery <- "SELECT COUNT(*) FROM offices;"
dbGetQuery(connection, myQuery)
myQuery <-
"SELECT
orderNumber, orderDate, requiredDate, customerNumber, status
FROM
orders
WHERE
(status = 'In Process'
OR status = 'shipped');"
dbGetQuery(connection, myQuery);
myQuery <-
"SELECT
VARIANCE(quantityOrdered) AS varQuantityOrdered
FROM
orderdetails;"
dbGetQuery(connection, myQuery);
myQuery <-
"SELECT
customerNumber,
status,
COUNT(*) AS numberOfOrders
FROM
orders
GROUP BY customerNumber , status
ORDER BY numberOfOrders DESC;"
myData <- dbGetQuery(connection, myQuery);
ggplot(myData, aes(status, numberOfOrders)) + geom_bar(stat="identity")
dbGetQuery(connection, "show processlist")
dbDisconnectAll <- function()
{
ile <- length(dbListConnections(MySQL())  )
lapply( dbListConnections(MySQL()), function(x) dbDisconnect(x) )
cat(sprintf("%s connection(s) closed.\n", ile))
}
dbDisconnectAll()
dbconnect = dbConnect(MySQL(),user="root", password="rootroot",
dbname="classicmodels", host="localhost")
