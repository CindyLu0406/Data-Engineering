******************
**                MSc ANALYTICS 
**     DATA ENGINEERING PLATFORMS
** File:  ASSIGNMENT 4 
** Auth:  Qianhui Ma
** Date:  04/06/2019
********************************************************************************************/

******************** Part A ********************
1. List total number of customers living in California.

db.customers.count({District:"California"})

2. List all movies that are rated NC-17.

db.films.find({Rating:"NC-17"})

3. List the count of movies by category.

db.films.aggregate({$group:{_id:"$Category",count:{$sum:1}}})

4.Find the top 2 movies with movie length greater than 25mins or which has commentaries AS a special features.

db.films.find({$or:[{"Length":{$gt:25}},
{"Special Features":"Commentaries"}]}).limit(2)

5.Provide 2 additional queries and indicate the specific business use cases they address.

a) Find the top 5 movies with movie length greater than 25mins or which are rated NC-17.

db.films.find({$or:[{"Length":{$gt:25}},
{"Rating":"NC-17"}]}).limit(5)

b) List the count of movies by rental duration.

db.films.aggregate({$group:{_id:"$Rental Duration",count:{$sum:1}}})





******************** Part B ********************
6. Find all Producers that produced the movie When Harry Met Sally.

MATCH (WHMS {title:"When Harry Met Sally"})<-[:PRODUCED]-(producers) 
RETURN producers.name

7. Find directors who have directed more than 2 movies.

MATCH (director:Person)-[:DIRECTED]->()
WITH director, count(*) as dirnum
WHERE dirnum > 2
RETURN director.name

8. Find the actors with 5+ movies, and the movies in which they acted.

MATCH (actor:Person)-[:ACTED_IN]->(movie:Movie)
WITH actor, collect(movie.title) AS movies, count(movie) AS actnum 
WHERE actnum >= 5
RETURN actor.name,  movies

9. Movies and actors exactly 3 "hops" away from the movie Hoffa

MATCH (hoffa:Movie {title:"Hoffa"})-[*3..3]-(hollywood)
RETURN DISTINCT hollywood

10.Provide 2 additional queries and indicate the specific business use cases they address.
a) average rating per movie
MATCH (reviewer:Person) -[r:REVIEWED]->(movies:Movie)
RETURN sum(r.rating)/count(r)

b) average number of producers per movie
MATCH (m:Movie) <-[:PRODUCED]-(producer:Person)
RETURN count(producer)/count(m) as Ave#ProducerPerMovie

********************************************************************************************/